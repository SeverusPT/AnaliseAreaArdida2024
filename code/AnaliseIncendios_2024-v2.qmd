---
title: "Análise da área ardida em Portugal continental no ano de 2024"
execute:
  echo: false
  warning: false
  error: false
  message: false
author: 
  - name: "João Gonçalves"
    orcid: 0000-0002-6615-0218
    affiliations:
      - name: BIOPOLIS/CIBIO-InBIO - U. Porto
        address: Campus de Vairão
        city: Vila do Conde
  - name: "Bruno Marcos"
    orcid: 0000-0001-5423-5890
    affiliations:
      - name: BIOPOLIS/CIBIO-InBIO - U. Porto
        address: Campus de Vairão
        city: Vila do Conde
format:
  html:
    encoding: UTF-8
    theme:
      light: flatly
      dark: darkly
    other-links:
      - text: SeverusPT
        href: https://severus.pt
    code-links:
      - text: Repositório de código
        icon: file-code
        href: https://github.com/SeverusPT/AnaliseAreaArdida2024
    tbl-cap: Quadro
    toc: true
    toc-depth: 4
    toc-title: "Índice"
    mainfont: Arial
    monofont: Arial
    css: styles.css
    title-block-banner: true
fontsize: 11pt
fontfamily: Arial
editor: visual
date: today
date-format: "DD/MM/YYYY"
lang: pt-PT
editor_options: 
  chunk_output_type: inline
---

```{r}
#| label: load-packages
#| code-summary: "Packages"

library(tidyverse)
library(ggplot2)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(fasterize)
library(tidyr)
library(ggmap)
library(flextable)
library(ggspatial)
library(tidyterra)
library(patchwork)
library(rnaturalearth)
library(rnaturalearthdata)

```

```{r}
#| label: set-main-params


OUTPUT_FORMAT <- 'html'
#OUTPUT_FORMAT <- 'pdf' 

USE_TEST_DATA <- FALSE

DO_FASTERIZE_ON_EFFIS <- FALSE
USE_COSC2024_CACHE <- TRUE
USE_BA_INTERSECT_CACHE <- TRUE

VERBOSE_ON_COSC24 <- FALSE
VERBOSE <- FALSE

BIGFIRE_BUFFER_DISTANCE <- 500
BIG_FIRE_THRESH <- 1000

## -------------------------------------------------- ##

theme_set(theme_bw(base_family = "Arial"))
theme_set(theme_minimal(base_family = "Arial"))

## -------------------------------------------------- ##

knitr::opts_chunk$set(ft.shadow = FALSE)

## -------------------------------------------------- ##

land_cover_colors <- c(
  "Artificializado"          = "#e31a1c",
  "Culturas anuais out/inv"  = "#eba000",
  "Culturas anuais pri/ver"  = "#9effe4",
  "Outras áreas agrícolas"   = "#f9f100",
  "Sobreiro e azinheira"     = "#9f218a",
  "Eucalipto"                = "#2bf100",
  "Outras folhosas"          = "#12c309",
  "Pinheiro bravo"           = "#0c8006",
  "Pinheiro manso"           = "#174e11",
  "Outras resinosas"         = "#1e636f",
  "Matos"                    = "#6f5e1a",
  "Veg. herbácea esp."       = "#d6cc90",
  "Sup. s/ vegetação"        = "#787878",
  "Zonas húmidas"            = "#1973a7",
  "Água"                     = "#362ecc"
)

sev_breaks <- c(-Inf, 0, 1455, 2750, 3801, 4900, Inf)
sev_labels <- c("Não ardido", "Muito baixa", "Baixa", 
            "Média", "Elevada", "Muito elevada")

from_to_recl <- as.matrix(data.frame(
  from = c(-Inf, 0, 1455, 2750, 3801, 4900),
  to = c(0, 1455, 2750, 3801, 4900, Inf),
  becomes = 0:5
))


sev_rbr_classes <- data.frame(
  rbr_sev_val = 0:5,
  rbr_sev_cls = c("Não ardido", "Muito baixa", "Baixa", 
            "Média", "Elevada", "Muito elevada")
)

cols <- c("#52BAE3","#FFA07A", "#FF6347", 
          "#BF3D3D", "#8B0000", "#000000")


# Define custom colors for each class
sev_cols <- c("Não ardido"  = cols[1], 
            "Muito baixa"   = cols[2], 
            "Baixa"         = cols[3], 
            "Média"         = cols[4], 
            "Elevada"       = cols[5], 
            "Muito elevada" = cols[6])


## -------------------------------------------------- ##

cosc24_sort <- c(
    # Áreas de matos e vegetação esparsa
    "Matos",
    "Veg. herbácea esp.",
    "Sup. s/ vegetação",
    # Tipos de floresta
    "Eucalipto",
    "Outras folhosas",
    "Sobreiro e azinheira",
    "Pinheiro bravo",
    "Pinheiro manso",
    "Outras resinosas",
    # Tipos de agricultura
    "Culturas anuais out/inv",
    "Culturas anuais pri/ver",
    "Outras áreas agrícolas",
    # Zonas urbanas/artificiais
    "Artificializado",
    # Corpos de água
    "Zonas húmidas",
    "Água")

## -------------------------------------------------- ##

cos18_sort <- c(
  # Áreas de matos e vegetação esparsa
  "Matos",
  "Vegetação esparsa",
  
  # Rochas e superfícies naturais
  "Rocha nua",
  
  # Tipos de floresta
  "Florestas de eucalipto",
  "Florestas de pinheiro bravo",
  "Florestas de sobreiro",
  "Florestas de azinheira",
  "Florestas de outros carvalhos",
  "Florestas de outras folhosas",
  "Florestas de espécies invasoras",
  "Florestas de pinheiro manso",
  "Florestas de outras resinosas",
  "Florestas de castanheiro",
  
  # Tipos de cobertos agro-florestais (SAF)
  "SAF de azinheira",
  "SAF de sobreiro",
  "SAF de outros carvalhos",
  "SAF de outras misturas",
  
  # Tipos de agricultura
  "Olivais",
  "Pomares",
  "Vinhas",
  "Culturas temporárias de sequeiro e regadio",
  "Culturas temporárias e/ou pastagens melhoradas associadas a olival",
  "Culturas temporárias e/ou pastagens melhoradas associadas a pomar",
  "Culturas temporárias e/ou pastagens melhoradas associadas a vinha",
  "Agricultura com espaços naturais e seminaturais",
  "Pastagens melhoradas",
  "Pastagens espontâneas",
  "Mosaicos culturais e parcelares complexos",
  "Agricultura protegida e viveiros",
  
  # Zonas urbanas
  "Tecido edificado contínuo predominantemente horizontal",
  "Tecido edificado contínuo predominantemente vertical",
  "Tecido edificado descontínuo",
  "Tecido edificado descontínuo esparso",
  "Áreas em construção",
  "Espaços vazios sem construção",
  
  # Outros usos (infraestruturas, instalações, etc.)
  "Outros equipamentos e instalações turísticas",
  "Equipamentos de lazer",
  "Instalações desportivas",
  "Instalações agrícolas",
  "Infraestruturas de tratamento de resíduos e águas residuais",
  "Infraestruturas de produção de energia renovável",
  "Infraestruturas de produção de energia não renovável",
  "Infraestruturas para captação, tratamento e abastecimento de águas para consumo",
  "Rede viária e espaços associados",
  "Rede ferroviária e espaços associados",
  "Indústria",
  "Pedreiras",
  "Minas a céu aberto",
  "Aterros",
  "Lixeiras e Sucatas",
  "Cemitérios",
  "Comércio",
  
  # Corpos de água
  "Cursos de água naturais",
  "Lagos e lagoas interiores artificiais",
  "Albufeiras de barragens",
  "Charcas",
  "Pauis",
  
  # Outros
  "Parques e jardins",
  "Campos de golfe",
  "Equipamentos culturais",
  "Marinas e docas pesca"
)


```

\newpage

::: callout-warning
## Aviso

Esta análise é preliminar e reflete os dados a que os autores tiveram acesso à data de criação deste documento. Esta análise não é definitiva e os valores poderão mudar assim que atualizações e modificações dos dados forem disponibilizadas (por razões diversas e fora do controlo dos autores).

Atualizações deste relatório serão disponibilizadas assim que modificações relevantes dos perímetros de área ardida fornecidos pelo Sistema Europeu Copernicus/EFFIS forem facultados.

As fontes de dados podem estar sujeitas a variações temporais e espaciais, imprecisões ou inexatidões de ordem diversa assim como a erros inerentes aos processos de recolha e processamento de informação completamente alheios aos autores.

Os autores deste relatório não assumem qualquer responsabilidade por decisões ou ações tomadas com base nos dados, análises ou conclusões aqui apresentadas sem a devida consideração das limitações mencionadas.

O uso inadequado ou a interpretação incorreta dos resultados, especialmente sem um conhecimento profundo das incertezas associadas, é da inteira responsabilidade de quem os utiliza. Recomenda-se que os resultados apresentados sejam sempre analisados ou interpretados com cautela, e que, se necessário, sejam complementados por outras fontes de informação e validações adicionais.
:::

::: callout-warning
## Aviso

Devido a um erro no pipeline de processamento de dados, **as versões deste relatório anteriores a 17/10/2024 continham um erro sistemático no cálculo das áreas ardidas**. 
Este erro resultou em uma sobre-estimação generalizada da área ardida, com especial impacto em grandes
ocorrências.      
     
Pedimos sinceras desculpas por qualquer inconveniente que este problema possa ter causado e que entretanto foi resolvido.      

Aproveitamos também para agradecer ao utilizador Fernando Amaro (Analista de dados na [CO2offset.ai](https://co2offset.ai)) pela crucial ajuda na deteção e análise deste problema.

:::

::: callout-note
## Info

(i) Se está a ver este relatório em um smartphone ou tablet, experimente rodar o ecrã para o formato horizontal para aceder ao índice de conteúdos (do lado direito do ecrã)

(ii) Este documento usa o ponto (.) como separador decimal e a vírgula como separador de milhares (,)
:::

::: callout-note
## Código fonte das análises

O código R utilizado para produzir estas análises está disponível no link:\
<https://github.com/SeverusPT/AnaliseAreaArdida2024>
:::

::: callout-note
## Agradecimentos

Este relatório foi financiado pela Fundação para a Ciência e a Tecnologia (FCT) no âmbito do projeto **SeverusPT --- "Um serviço e produto de dados baseados na web para a avaliação e previsão de severidade de incêndio em Portugal continental"**.

-   Website: <https://severus.pt/>
-   DOI: <https://doi.org/10.54499/PCIF/RPG/0170/2019>
-   Referência FCT: **PCIF/RPG/0170/2019**

![](logo_severus_color_horizontal.png){width="auto" fig-align="center"}

![](logo_entidades_color_horizontal.png){width="auto" fig-align="center"}

![](https://severus.pt/wp-content/uploads/2022/02/severus-financiamento-transparents.png){width="100%" fig-align="center"}
:::

\newpage

## 1. Material e métodos

### 1.1. Fontes de dados espaciais/geográficos

Para as análises realizadas neste relatório foram usados os seguintes conjuntos de dados:

-   **Áreas ardidas do Sistema Europeu Copernicus EFFIS (European Forest Fire Information System)**: [link geral](https://forest-fire.emergency.copernicus.eu/applications/data-and-services) \| [link dados](https://maps.effis.emergency.copernicus.eu/effis?service=WFS&request=getfeature&typename=ms:modis.ba.poly&version=1.1.0&outputformat=SHAPEZIP)

-   **Carta de Uso e Ocupação do Solo - 2018**: [link geral](https://snig.dgterritorio.gov.pt/rndg/srv/por/catalog.search#/metadata/b498e89c-1093-4793-ad22-63516062891b) \| [link dados](https://geo2.dgterritorio.gov.pt/cos/COS2018/COS2018v2-shp.zip)

-   **Carta de Ocupação do Solo Conjuntural - 2024 Pré-Verão DGT**: [link geral](https://snig.dgterritorio.gov.pt/rndg/srv/por/catalog.search#/metadata/e0879e62-ab0c-4396-b71e-112764e226d7) \| [link dados](https://geo2.dgterritorio.gov.pt/cosc/COSc2024_preverao.zip)

-   **Carta Administrativa Oficial de Portugal - CAOP2023 (Continente)**: [link geral](https://snig.dgterritorio.gov.pt/rndg/srv/por/catalog.search#/metadata/198497815bf647ecaa990c34c42e932e) \| [link dados](https://geo2.dgterritorio.gov.pt/caop/CAOP_Continente_2023-shp.zip)

-   **Rede Nacional de Áreas Protegidas (RNAP)**[^1]: [link geral](https://geocatalogo.icnf.pt/catalogo.html) \| [link dados](https://si.icnf.pt/shp/rnap)

-   **Zonas de Proteção Especial da Diretiva Aves (ZPE) - RN2000**: [link geral](https://geocatalogo.icnf.pt/catalogo.html) \| [link dados](https://si.icnf.pt/shp/zpe)

-   **Sítios da Diretiva Habitats (SIC) - RN2000**: [link geral](https://geocatalogo.icnf.pt/catalogo.html) \| [link dados](https://si.icnf.pt/shp/sic)

-   **Estradas e vias de trânsito - OpenStreetMaps PT**: [link geral](https://download.geofabrik.de/europe/portugal.html) \| [link dados](https://download.geofabrik.de/europe/portugal.html)

-   **Global ML Building Footprints** (área/polígonos de edifícios): [link geral-1](https://github.com/microsoft/GlobalMLBuildingFootprints) \| [link geral-2](https://gee-community-catalog.org/projects/msbuildings/) \| [link dados](https://code.earthengine.google.com/?scriptPath=users/sat-io/awesome-gee-catalog-examples:population-socioeconomics/GLOBAL-ML-BUILDINGS)

-   **Rede Hidrográfica -- EU-Hydro River Network Database 2006-2012 (NUTS: PT1)**: [link geral](https://land.copernicus.eu/en/products/eu-hydro/eu-hydro-river-network-database) \| [link dados](https://land.copernicus.eu/en/products/eu-hydro/eu-hydro-river-network-database#download)

-   **Dados Censos 2021 - BGRI**: [Link geral](https://mapas.ine.pt/download/index2021.phtml) \| [link dados](https://mapas.ine.pt/download/filesGPG/2021/BGRI21_CONT.zip)

-   **Modelo Digital do Terreno - SRTM 1''** (NASA; Gonçalves, J.A., Pinhal, A.): [link geral](https://www.fc.up.pt/pessoas/jagoncal/dems/) \| [link dados](http://gis.ciimar.up.pt/gisData/dems/dem_srtm_pt_1sec.tif)

- **Percursos Pedestres** (dados gentilmente cedidos por Gabriel Soares; compilação ca. 2020; fonte:  [https://www.percursospedestresportugal.com/](https://www.percursospedestresportugal.com/))     


[^1]: Este conjunto de dados foi atualizado (27/09/2024) com a área correspondente à Paisagem Protegida Regional da Serra da Aboboreira (PPRSA).



### 1.2. Métodos

#### 1.2.1. Análise e visualização de dados

Para a quantificação da área ardida, foram realizadas análises espaciais recorrendo a ferramentas de **Sistemas de Informação Geográfica (SIG)**. Estas análises foram desenvolvidas na plataforma de computação **RStudio** utilizando a linguagem **R**, permitindo assim integrar, manipular, visualizar e processar grandes volumes de dados geoespaciais. As ferramentas empregadas para este fim incluíram uma combinação de bibliotecas especializadas no tratamento de dados vetoriais e raster, assim como para a geração de gráficos e tabelas.

Para o **geoprocessamento e análise de dados vetoriais**, foi utilizado o pacote **sf**, que facilitou o manuseio e a análise de dados espaciais em formato vetorial. Em complemento, os pacotes **terra**, **tidyterra**, **raster** e **fasterize** foram usados para o **geoprocessamento e análise de dados raster**, oferecendo funcionalidades robustas para a manipulação de dados em grande escala.

A visualização de dados geoespaciais foi aprimorada com o pacote **ggmap**, que permitiu a inclusão de basemaps em formato raster. Além disso, o pacote **tidyverse** foi utilizado para a **manipulação, análise e agregação de dados**, permitindo uma estrutura de trabalho eficiente para transformar e analisar os dados espaciais.

Para a **renderização de gráficos e mapas**, os pacotes **ggplot2** e **patchwork** foram aplicados, proporcionando a criação de visualizações detalhadas e a composição de gráficos e mapas. Finalmente, a **formatação e renderização de tabelas** foi feita através dos pacotes **knitr**, **kableExtra** e **flextable**, garantindo a apresentação dos resultados tabulares.

Todo o fluxo de trabalho visou garantir a precisão e repetibilidade da análise espacial e estatística dos dados, permitindo uma compreensão abrangente das áreas ardidas e a geração de outputs rigorosos e acessíveis.

#### 1.2.2. Quantificação da área ardida por classe de uso/coberto do solo

Tendo por base os dados de área ardida foi elaborada uma análise relativamente à distribuição dessa em função das categorias de uso/coberto do solo. Para esse efeito recorreu-se a duas bases de dados de referência para Portugal continental:

-   **Carta de Ocupação do Solo Conjuntural** para o ano de 2024 (**COSc 2024**, período pré-verão; Fonte: DGT) e a,

-   **Carta de Uso e Ocupação do Solo** (**COS 2018, versão 2**; Fonte: DGT).

No primeiro conjunto de dados -- COSc 2024 -- procurou-se a elevada atualidade desta base de dados para efeito da compreensão das categorias mais afetadas pelos incêndios. Enquanto que para a COS 2018 buscou-se uma complementaridade das fontes de informação, assim como maior resolução temática deste conjunto de dados (i.e., maior número de categorias e, portanto, maior grau de discriminação dos tipos de uso/coberto do solo).

#### 1.2.3. Análise da severidade da área ardida


::: callout-note
## Acesso/descarregamento dos dados de severidade

Os dados preliminares em formato raster GeoTIFF podem ser descarregados no seguinte [link (com metadados)](./tmp_data/SPT_RBR_NBR_S2MSI_E2024_R003P003_32629_20241016_v02.zip)

Estes dados são fornecidos em números inteiros (com parte negativa, mais precisamente, 32-bit signed integer) tendo sido multiplicados por um fator de escala de 10,000. Originalmente os cálculos de severidade são efetuados em números decimais mas, para poupar espaço em disco, é aplicado este fator de reescalaonamento e é feito o arredondamente/truncagem dos valores. Os valores de severidade do indicador NBR/RBR, usualmente estão entre \[-6,000; 17,000\] (ou seja, na escala decimal original, \[-0.6; 1.7\], de zonas não ardidas/em recuperação até áreas com extrema severidade).

O formato é GeoTIFF, com sistema de coordenadas WGS 1984/UTM 29N.

:::

A severidade da área ardida foi calculada a partir de imagens do satélite ótico **Sentinel-2** utilizando o índice espectral *Normalized Burn Ratio (NBR)*, que mede a diferença da reflectância da superfície terrestre entre as bandas do infravermelho próximo (NIR) e do infravermelho médio (SWIR).

$NBR = \frac{NIR - SWIR}{NIR + SWIR}$

O NBR é sensível a alterações na vegetação e no solo devidas ao fogo. Para avaliar a severidade do fogo, comparou-se o NBR pré-fogo (NBR pré) com o NBR pós-fogo (NBR pós), utilizando o indicador *Relativized Burn Ratio (RBR)*. Este indicador permite uma quantificação mais robusta das mudanças no terreno, eliminando as variações relativas entre os diferentes tipos de vegetação. A fórmula do **RBR** é dada por:

$dNBR = NBR_{pré} - NBR_{pós}$

$RBR = \frac{dNBR}{NBR_{pré} + 1.001}$

Este cálculo foi aplicado em imagens de satélite antes e depois do fogo para produzir mapas de severidade da área ardida.

As classes de severidade para o indicador *NBR/RBR* foram obtidas através da análise das distribuições para os anos 2018 - 2023 com base nos produtos gerados pelo projeto [SeverusPT](https://data.severuspt.ipvc.pt/products) (para o mesmo satélite e indicador de severidade). A partição das classes foi obtida pelos percentis da distribuição de 20%, 40%... a 80% para os valores de *NBR/RBR* superiores a zero:

| De      | Para    | Nível de severidade |
|---------|---------|---------------------|
| \[min\] | 0       | Não ardido          |
| 0       | 1455    | Muito baixa         |
| 1455    | 2750    | Baixa               |
| 2750    | 3801    | Média               |
| 3801    | 4900    | Elevada             |
| 4900    | \[max\] | Muito elevada       |

A escala apresentada na tabela, tal como os dados de severidade, foram multiplicados por um fator de escala de 10,000.

```{r}
#| label: set-aux-functions


set_flextable_defaults(
  font.family = "Arial",
  font.size = 10
)


replace_strings <- function(x){
  x <- iconv(x, from = "latin1", to = "UTF-8")
  x <- gsub("\\xea","ê",x)
  x <- gsub("\\xe3","ã",x)
  return(x)
}

insert_line_break_ <- function(input_string, n = 40) {
  if (nchar(input_string) <= n) {
    return(input_string)
  }
  
  # Find the last space before or at the n-th character
  break_position <- max(gregexpr(" ", substr(input_string, 1, n))[[1]])
  
  # If no space is found, break at the n-th character
  if (break_position == -1) {
    break_position <- n
  }
  
  # Insert the line break
  paste0(substr(input_string, 1, break_position), "\n", 
         substr(input_string, break_position + 1, nchar(input_string)))
}

shorten_string_ <- function(input_string, n = 40) {
  if (nchar(input_string) > n) {
    return(paste0(substr(input_string, 1, n), "..."))
  } else {
    return(input_string)
  }
}

insert_line_break <- function(input_string, n = 40) {
  sapply(input_string, insert_line_break_, n=n, USE.NAMES = FALSE)
}

shorten_string <- function(input_string, n = 40) {
  sapply(input_string, shorten_string_, n=n, USE.NAMES = FALSE)
}



```

```{r}
#| label: load-data-intersect-bas 


# Burn severity data
# sev_raster_file <- "../data/raster/SPT_RBR_NBR_S2MSI_E2024_R003P003_32629_20240930_v02.tif"
#   
#sev_raster_file <- "../data/raster/SPT_RBR_NBR_S2MSI_E2024_R003P003_32629_20241008_v02.tif"
#
#sev_raster_file <- "../data/raster/SPT_RBR_NBR_S2MSI_E2024_R003P003_32629_20241015_v02.tif"
#
sev_raster_file <- "../data/raster/SPT_RBR_NBR_S2MSI_E2024_R003P003_32629_20241016_v02.tif"


sev_s2_rbr <- rast(sev_raster_file)

  
## SPATIAL DATA
effis_sp <- read_sf("../data/vector/EFFIS_data/effis_pt.shp") %>% 
  filter(PROVINCE != "Região Autónoma da Madeira") %>% 
  filter(PROVINCE != "Região Autónoma dos Açores") %>% 
  mutate(month = month(fire_dt)) %>% 
  mutate(week = week(fire_dt)) %>% 
  mutate(id = as.numeric(id))

effis_sp_2024 <- effis_sp %>% 
  filter(year == 2024)

effis_spatvec_2024 <- effis_sp_2024 %>% 
  as("SpatVector")

effis_sp_2024_utm <- effis_sp_2024 %>% 
  st_transform(crs="EPSG:32629")

effis_spatvec_2024_utm <- effis_sp_2024_utm %>% 
  as("SpatVector")

## NON-SPATIAL DATA
effis_data <- read_sf("../data/vector/EFFIS_data/effis_pt.shp") %>% 
  mutate(month = month(fire_dt)) %>% 
  mutate(week = week(fire_dt)) %>% 
  filter(PROVINCE != "Região Autónoma da Madeira") %>% 
  filter(PROVINCE != "Região Autónoma dos Açores") %>% 
  st_drop_geometry()

effis_data_2024 <- effis_data %>% 
  filter(year == 2024) 

cosc_2024 <- rast("../data/raster/COSc2024_preverao/COSc2024_pre-verao_N3_v0_WGS84UTM29N.tif")
cosc_2024_rst <- raster::raster("../data/raster/COSc2024_preverao/COSc2024_pre-verao_N3_v0_WGS84UTM29N.tif")

osm_types <- read.csv("osm_roads_pt_pt.csv")

conc <- read_sf("../data/vector/CAOP_Continente_2023/Cont_Mun_CAOP2023.shp") %>% 
  mutate(area_conc = as.numeric(st_area(.) / 10000)) %>% 
  st_transform(crs="EPSG:32629")

conc_wgs <- conc %>% 
  st_transform(crs="EPSG:4326") %>% 
  st_simplify()

conc_areas <- conc %>% 
  st_drop_geometry() %>% 
  group_by(Municipio) %>% 
  summarise(conc_area_ha = sum(area_conc))


if(!USE_BA_INTERSECT_CACHE){
  
  
  ## -------------------------------------------------------------------------- ##
  ## RNAP ----
  ## -------------------------------------------------------------------------- ##
  
  
  rnap <- read_sf("../data/vector/rnap/rnap_v2.shp") %>% 
    st_transform(crs="EPSG:32629") %>% 
    mutate(area_ap = as.numeric(st_area(.) / 10000)) %>% 
    mutate(nome_ap = iconv(nome_ap, to = "ISO-8859-1", from = "UTF-8"))
  
  ba_rnap_ <- st_intersection(rnap, effis_sp_2024_utm) %>% 
    mutate(ba_ha = as.numeric(st_area(.) / 10000)) %>% 
    mutate(id = as.character(id))
  
  ba_rnap <- ba_rnap_ %>%
    st_drop_geometry() %>%
    group_by(nome_ap) %>%
    summarize(ba_total_ha = sum(ba_ha)) %>%
    arrange(desc(ba_total_ha)) %>%
    left_join(rnap %>%
                select(nome_ap, sigla, classifica, area_ap) %>%
                st_drop_geometry(), by="nome_ap") %>%
    mutate(ba_perc = (ba_total_ha / area_ap)*100)
  
  readr::write_rds(ba_rnap_,"ba_rnap_.rds")
  readr::write_rds(ba_rnap,"ba_rnap.rds")
  #rm(rnap)
  
  if(VERBOSE) cat("\n--> Finished processing RNAP data\n\n")
  
  
  ## -------------------------------------------------------------------------- ##
  ## RN2K SIC ----
  ## -------------------------------------------------------------------------- ##
  
  
  sic <- read_sf("../data/vector/sic/sic.shp") %>% 
    st_transform(crs="EPSG:32629") %>% 
    mutate(area_sic = as.numeric(st_area(.) / 10000))
  
  ba_rn2k_sic_ <- st_intersection(sic, effis_sp_2024_utm) %>% 
    mutate(ba_ha = as.numeric(st_area(.) / 10000)) %>% 
    mutate(id = as.character(id)) 

  ba_rn2k_sic <- ba_rn2k_sic_ %>%
    #mutate(ba_ha = as.numeric(st_area(.) / 10000)) %>%
    st_drop_geometry() %>%
    group_by(site_code, site_name) %>%
    summarize(ba_total_ha = sum(ba_ha)) %>%
    arrange(desc(ba_total_ha)) %>%
    left_join(sic %>%
                select(site_code, area_sic) %>%
                st_drop_geometry(), by="site_code") %>%
    mutate(ba_perc = (ba_total_ha / area_sic)*100)
  
  readr::write_rds(ba_rn2k_sic_,"ba_rn2k_sic_.rds")
  readr::write_rds(ba_rn2k_sic,"ba_rn2k_sic.rds")
  
  #rm(sic)
  
  if(VERBOSE) cat("\n--> Finished processing SIC/RN2K data\n\n")

  
  ## -------------------------------------------------------------------------- ##
  ## RN2K ZPE ----
  ## -------------------------------------------------------------------------- ##
  
  
  zpe <- read_sf("../data/vector/zpe/zpe.shp") %>% 
    st_transform(crs="EPSG:32629") %>% 
    mutate(area_zpe = as.numeric(st_area(.) / 10000))
  
  ba_rn2k_zpe_ <- st_intersection(zpe, effis_sp_2024_utm) %>% 
    mutate(ba_ha = as.numeric(st_area(.) / 10000)) %>% 
    mutate(id = as.character(id)) 

    
  ba_rn2k_zpe <- ba_rn2k_zpe_ %>%
    #mutate(ba_ha = as.numeric(st_area(.) / 10000)) %>%
    st_drop_geometry() %>%
    group_by(site_code, site_name) %>%
    summarize(ba_total_ha = sum(ba_ha)) %>%
    arrange(desc(ba_total_ha)) %>%
    left_join(zpe %>%
                select(site_code, area_zpe) %>%
                st_drop_geometry(), by="site_code") %>%
    mutate(ba_perc = (ba_total_ha / area_zpe)*100)
  
  readr::write_rds(ba_rn2k_zpe_,"ba_rn2k_zpe_.rds")

  readr::write_rds(ba_rn2k_zpe,"ba_rn2k_zpe.rds")
  
  #rm(zpe)
  
  if(VERBOSE) cat("\n--> Finished processing ZPE/RN2K data\n\n")

  
  ## -------------------------------------------------------------------------- ##
  ## Municipalities ----
  ## -------------------------------------------------------------------------- ##
  
  
  ba_mun_2024_ <- st_intersection(conc, effis_sp_2024_utm) %>% 
    mutate(id = as.character(id)) %>% 
    mutate(ba_ha = as.numeric(st_area(.) / 10000))

  ba_mun_2024 <- ba_mun_2024_ %>% 
    #mutate(ba_ha = as.numeric(st_area(.) / 10000)) %>%
    st_drop_geometry() %>%
    group_by(Municipio) %>%
    summarize(ba_total_ha = sum(ba_ha)) %>%
    arrange(desc(ba_total_ha)) %>%
    left_join(conc_areas, by = "Municipio") %>%
    mutate(ba_perc = (ba_total_ha / conc_area_ha)*100)
  
  readr::write_rds(ba_mun_2024_,"ba_mun_2024_.rds")
  readr::write_rds(ba_mun_2024,"ba_mun_2024.rds")
    
  #rm(conc_areas)
  
  if(VERBOSE) cat("\n--> Finished processing municipalities data\n\n")

  
  ## -------------------------------------------------------------------------- ##
  ## COS 2018 ----
  ## -------------------------------------------------------------------------- ##
  
  
  cos_2018 <- read_sf("../data/vector/COS2018v2/COS2018v2_WGS84UTM29N.shp")
  
  ba_effis_cos18 <- st_intersection(cos_2018, effis_sp_2024_utm) %>%
    mutate(ba_ha = as.numeric(st_area(.) / 10000)) 
  
  
  ba_cos18_rnap <- st_intersection(ba_effis_cos18, rnap) %>%
    mutate(ba_ha = as.numeric(st_area(.) / 10000)) %>%
    st_drop_geometry()
  ba_cos18_sic <- st_intersection(ba_effis_cos18, sic) %>%
    mutate(ba_ha = as.numeric(st_area(.) / 10000)) %>%
    st_drop_geometry()
  ba_cos18_zpe <- st_intersection(ba_effis_cos18, zpe) %>%
    mutate(ba_ha = as.numeric(st_area(.) / 10000)) %>%
    st_drop_geometry()

  readr::write_rds(ba_cos18_rnap, "ba_cos18_rnap.rds")
  
  readr::write_rds(ba_cos18_sic, "ba_cos18_sic.rds")
  
  readr::write_rds(ba_cos18_zpe, "ba_cos18_zpe.rds")
  
  
  ba_effis_cos18 <- ba_effis_cos18 %>%
    st_drop_geometry()
  
  
  readr::write_rds(ba_effis_cos18, "ba_effis_cos18.rds")
  
  rm(cos_2018)
  
  if(VERBOSE) cat("\n--> Finished processing COS 2018 data\n\n")
    
    
  ## -------------------------------------------------------------------------- ##
  ## COSc 2024 ----
  ## -------------------------------------------------------------------------- ##
  
  
  ba_effis_cos24_crop <- terra::mask(cosc_2024, effis_spatvec_2024_utm)

  #ba_effis_cos24_crop <- writeRaster(ba_effis_cos24_crop,"ba_effis_cos24_crop.tif")
  
  ba_effis_cos24_crop_vec <- as.polygons(ba_effis_cos24_crop)

  rm(ba_effis_cos24_crop)
  
  #ba_effis_cos24_crop_vec$area_ha <- expanse(ba_effis_cos24_crop_vec,unit="ha")
  
  #names(ba_effis_cos24_crop_vec) <- c("cosc2024","area_ha")
  
  ba_effis_cos24 <- ba_effis_cos24_crop_vec %>% 
    st_as_sf() %>% 
    st_cast("POLYGON")
  
  #st_write(ba_effis_cos24_crop_vec,"ba_effis_cos24_crop_vec.shp")  
  rm(ba_effis_cos24_crop_vec)
  
  ba_effis_cos24 <- ba_effis_cos24 %>% 
    mutate(ba_ha = as.numeric(st_area(.))/10000)
  
  colnames(ba_effis_cos24)[1] <- "cosc2024"
  

  ba_cosc24_rnap <- st_intersection(ba_effis_cos24, rnap) %>%
    mutate(ba_ha = as.numeric(st_area(.) / 10000)) %>%
    st_drop_geometry()
  ba_cosc24_sic <- st_intersection(ba_effis_cos24, sic) %>%
    mutate(ba_ha = as.numeric(st_area(.) / 10000)) %>%
    st_drop_geometry()
  ba_cosc24_zpe <- st_intersection(ba_effis_cos24, zpe) %>%
    mutate(ba_ha = as.numeric(st_area(.) / 10000)) %>%
    st_drop_geometry()

  readr::write_rds(ba_cosc24_rnap, "ba_cosc24_rnap.rds")
  
  readr::write_rds(ba_cosc24_sic, "ba_cosc24_sic.rds")
  
  readr::write_rds(ba_cosc24_zpe, "ba_cosc24_zpe.rds")
  

  ba_effis_cos24 <- ba_effis_cos24  %>%
    st_drop_geometry()
  
  readr::write_rds(ba_effis_cos24, "ba_effis_cos24.rds")
  

  
  if(VERBOSE) cat("\n--> Finished processing COSc 2024 data\n\n")
 
  
  ## -------------------------------------------------------------------------- ##
  ## Open Street Maps road data ----
  ## -------------------------------------------------------------------------- ##
  
  
  osm <- vect("../data/vector/osm_pt/gis_osm_roads_free_1.shp")
  
  ba_osm_roads <- intersect(effis_spatvec_2024, osm) %>% 
    st_as_sf(.) %>% 
    st_transform(crs = "EPSG:32629") %>% 
    mutate(road_len_km = as.numeric(st_length(.)) / 1000) %>% 
    st_drop_geometry()
  
  readr::write_rds(ba_osm_roads, "ba_osm_roads.rds")
  
  rm(osm)

  if(VERBOSE) cat("\n--> Finished processing OSM roads data\n\n")
  
  
  ## -------------------------------------------------------------------------- ##
  ## River data ----
  ## -------------------------------------------------------------------------- ##
  
  hydro_net <- vect("../data/vector/hidro/EU_Hydro_network.shp") %>% 
    project("EPSG:4326")
  
  ba_hydro_net <- intersect(effis_spatvec_2024, hydro_net) %>% 
    st_as_sf(.) %>% 
    st_transform(crs = "EPSG:32629") %>% 
    mutate(river_len_m = as.numeric(st_length(.))) %>% 
    st_drop_geometry()
  
  readr::write_rds(ba_hydro_net,"ba_hydro_net.rds")
  
  rm(hydro_net)
  
  if(VERBOSE) cat("\n--> Finished processing river data\n\n")

  
  ## -------------------------------------------------------------------------- ##
  ## MS Buildings footprint ----
  ## -------------------------------------------------------------------------- ##

  
  msb <- vect("../data/vector/msbuildings/MSBuildingsPT_v1.shp")
  
  ba_msb_buildings <- intersect(effis_spatvec_2024, msb) %>% 
    st_as_sf(.) %>% 
    st_transform(crs = "EPSG:32629") %>% 
    mutate(area_build_ha = as.numeric(st_area(.)) / 10000) %>% 
    st_drop_geometry()

  readr::write_rds(ba_msb_buildings,"ba_msb_buildings.rds")
  
  rm(msb)

  if(VERBOSE) cat("\n--> Finished processing MSBuildings data\n\n")

  
  ## -------------------------------------------------------------------------- ##
  ## INE BGRI population census data ----
  ## -------------------------------------------------------------------------- ##
  
  
  bgri <- vect("../data/vector/ine/BGRI21_CONT.gpkg") %>% 
    project("EPSG:4326")
  
  ba_bgri <- intersect(effis_spatvec_2024, bgri) %>% 
    st_as_sf(.) %>% 
    st_transform(crs = "EPSG:32629") %>% 
    mutate(area_build_ha = as.numeric(st_area(.)) / 10000) %>% 
    st_drop_geometry()

  readr::write_rds(ba_bgri,"ba_bgri.rds")
  
  rm(bgri)  

  if(VERBOSE) cat("\n--> Finished processing INE/BGRI data\n\n")


  ## -------------------------------------------------------------------------- ##
  ## Tracks and trails data for mainland PT ----
  ## -------------------------------------------------------------------------- ##
  
  
  pp <- vect("../data/vector/percursos_pedestres/percursos_pedestres-24092019.shp")
  
  #pp$length_km <- perim(pp)/1000
  
  ba_pp <- intersect(effis_spatvec_2024, pp) %>% 
    st_as_sf(.) %>% 
    st_transform(crs = "EPSG:32629") %>% 
    mutate(ba_len_km = as.numeric(st_length(.)) / 1000) %>% 
    st_drop_geometry()

  readr::write_rds(ba_pp,"ba_pp.rds")
  
  rm(pp)  

  if(VERBOSE) cat("\n--> Finished processing tracks & trails data\n\n")

  
    
  ## -------------------------------------------------------------------------- ##
  ## Burn Severity data ----
  ## -------------------------------------------------------------------------- ##


  ba_rbr_class <- classify(sev_s2_rbr, rcl = from_to_recl)

  
  ba_rbr_class_sp <- as.polygons(ba_rbr_class)

  rm(ba_rbr_class)
  
  #ba_effis_cos24_crop_vec$area_ha <- expanse(ba_effis_cos24_crop_vec,unit="ha")
  
  #names(ba_effis_cos24_crop_vec) <- c("cosc2024","area_ha")
  
  ba_rbr_class_sf <- ba_rbr_class_sp %>% 
    st_as_sf() %>% 
    st_cast("POLYGON")
  
  rm(ba_rbr_class_sp)
  
  colnames(ba_rbr_class_sf)[1] <- "sev_rbr"
  
  
  ba_sev_rbr_rnap <- st_intersection(ba_rbr_class_sf, rnap) %>%
    mutate(ba_ha = as.numeric(st_area(.) / 10000)) %>%
    st_drop_geometry()
  ba_sev_rbr_sic <- st_intersection(ba_rbr_class_sf, sic) %>%
    mutate(ba_ha = as.numeric(st_area(.) / 10000)) %>%
    st_drop_geometry()
  ba_sev_rbr_zpe <- st_intersection(ba_rbr_class_sf, zpe) %>%
    mutate(ba_ha = as.numeric(st_area(.) / 10000)) %>%
    st_drop_geometry()

  ba_sev_rbr_rnap <- ba_sev_rbr_rnap %>% 
    left_join(sev_rbr_classes, by=c("sev_rbr"="rbr_sev_val"))
  ba_sev_rbr_sic <- ba_sev_rbr_sic %>% 
    left_join(sev_rbr_classes, by=c("sev_rbr"="rbr_sev_val"))
  ba_sev_rbr_zpe <- ba_sev_rbr_zpe %>% 
    left_join(sev_rbr_classes, by=c("sev_rbr"="rbr_sev_val"))
  
  readr::write_rds(ba_sev_rbr_rnap, "ba_sev_rbr_rnap.rds")
  
  readr::write_rds(ba_sev_rbr_sic, "ba_sev_rbr_sic.rds")
  
  readr::write_rds(ba_sev_rbr_zpe, "ba_sev_rbr_zpe.rds")
  

  ba_rbr_class_sf <- ba_rbr_class_sf  %>%
    st_drop_geometry() %>% 
  left_join(sev_rbr_classes, by=c("sev_rbr"="rbr_sev_val"))
  
  readr::write_rds(ba_rbr_class_sf, "ba_rbr_class_sf.rds")
  
  
  if(VERBOSE) cat("\n--> Finished processing Burn Severity data\n\n")

  
}else{
  
  # Load cached data as rds files
  
  ba_rnap          <- read_rds("ba_rnap.rds")
  ba_rn2k_sic      <- read_rds("ba_rn2k_sic.rds")
  ba_rn2k_zpe      <- read_rds("ba_rn2k_zpe.rds")
  ba_rnap_         <- read_rds("ba_rnap_.rds")
  ba_rn2k_sic_     <- read_rds("ba_rn2k_sic_.rds")
  ba_rn2k_zpe_     <- read_rds("ba_rn2k_zpe_.rds")
  
  ba_mun_2024      <- read_rds("ba_mun_2024.rds")
  ba_mun_2024_     <- read_rds("ba_mun_2024_.rds")
  
  ba_effis_cos18   <- read_rds("ba_effis_cos18.rds")
  ba_cos18_rnap    <- read_rds("ba_cos18_rnap.rds")
  ba_cos18_sic     <- read_rds("ba_cos18_sic.rds")
  ba_cos18_zpe     <- read_rds("ba_cos18_zpe.rds")
  
  ba_effis_cos24   <- read_rds("ba_effis_cos24.rds")
  ba_cosc24_rnap   <- read_rds("ba_cosc24_rnap.rds")
  ba_cosc24_sic    <- read_rds("ba_cosc24_sic.rds")
  ba_cosc24_zpe    <- read_rds("ba_cosc24_zpe.rds")
  
  ba_osm_roads     <- read_rds("ba_osm_roads.rds")
  
  ba_msb_buildings <- read_rds("ba_msb_buildings.rds")
  
  ba_hydro_net     <- read_rds("ba_hydro_net.rds")
  
  ba_bgri          <- read_rds("ba_bgri.rds")

  ba_rbr_class_sf  <- read_rds("ba_rbr_class_sf.rds")
  ba_sev_rbr_rnap  <- read_rds("ba_sev_rbr_rnap.rds")
  ba_sev_rbr_sic   <- read_rds("ba_sev_rbr_sic.rds")
  ba_sev_rbr_zpe   <- read_rds("ba_sev_rbr_zpe.rds")
  
  ba_pp            <- read_rds("ba_pp.rds")
}

##gc()

```

\newpage

## 2. Área ardida em Portugal continental (2024)

```{r}
#| label: make-ba-subtotals-stats


annual_totals <-
effis_data %>% 
  filter(year >= 2001) %>% 
  group_by(year) %>% 
  summarise(ba_total_yr = sum(area_ht))


yr_2024_total <-
effis_data_2024 %>% 
  summarise(ba_total_2024 = sum(area_ht))

months_df <- data.frame(
  number = 1:12,
  month_name = c("janeiro", "fevereiro", "março", "abril", "maio", "junho", 
                 "julho", "agosto", "setembro", "outubro", "novembro", "dezembro")
)
# Convert month_name to a factor and order by number
months_df$month_name <- factor(months_df$month_name, 
                               levels = c("janeiro", "fevereiro", "março", "abril", 
                                          "maio", "junho", "julho", "agosto", 
                                          "setembro", "outubro", "novembro", "dezembro"))

yr_2024_month_totals <-
effis_data_2024 %>% 
  group_by(month) %>% 
  summarise(ba_total_month = sum(area_ht)) %>% 
  left_join(months_df, by=c("month"="number"))


after_15sept_total <- 
effis_data_2024 %>% 
  filter(as.Date(fire_dt) >= as.Date("2024-09-15")) %>% 
  summarise(ba_total_15sept = sum(area_ht))

perc_15sept <- as.numeric(after_15sept_total[1,1]) / as.numeric(yr_2024_total[1,1])




```

```{r}
#| label: ba-rivers-impact

ba_hydro_summary <- 
ba_hydro_net %>% 
  distinct(OBJECT_ID, .keep_all = TRUE) %>% 
  group_by(STRAHLER) %>% 
  summarise(total_len = sum(river_len_m)) %>% 
  mutate(
    total_len = round(total_len / 1000, 1), # Convert to kilometers and round to 1 decimal place
    markdown_entry = paste0("- Classe ", STRAHLER, ": ", total_len, " km\n")
  )


```

```{r}
#| label:  ba-by-size-class


# Define the breaks for the wildfire size classes
breaks <- c(0, 10, 100, 250, 500, 1000, 2500, 5000, 10000, Inf)

# Labels for each size class
labels <- c("0-10 ha", "10-100 ha", "100-250 ha", 
            "250-500 ha", "500-1000 ha", 
            "1000-2500 ha", "2500-5000 ha",
            "5000-10000 ha", ">10000 ha")

# Cut the wildfire sizes into these categories
categories <- cut(effis_data_2024$area_ht, 
                  breaks = breaks, 
                  labels = labels, 
                  right = FALSE)


# Count the number of fires in each class
fire_count <- table(categories)

# Calculate the percentage of fires in each class
fire_percentage <- prop.table(fire_count) * 100


Nr_inc_15set <- effis_data_2024 %>%   
  filter(as.Date(fire_dt) >= as.Date("2024-09-15"))

# Cut the wildfire sizes into these categories
categories_15set <- cut(Nr_inc_15set$area_ht, 
                  breaks = breaks, 
                  labels = labels, 
                  right = FALSE)

# Count the number of fires in each class
fire_count_15set <- table(categories_15set)

wf_counts <- 
data.frame(Categoria=names(fire_count), 
           Nr_incendios_2024 = as.numeric(fire_count),
           Percentagem_2024 = as.numeric(fire_percentage),
           Nr_incendios_15_setembro = as.numeric(fire_count_15set),
           Percentagem_categoria = (as.numeric(fire_count_15set) / 
                              as.numeric(fire_count))*100
           )

wf_area_cats <- data.frame(cats=categories, area_ht = effis_data_2024$area_ht) %>% 
  group_by(cats) %>% 
  summarise(area_per_cat = sum(area_ht)) %>% 
  mutate(cum_area = cumsum(area_per_cat))


```

### Síntese geral

À data de `{r} format(Sys.Date(), "%d/%m/%Y")` a área ardida no ano de 2024, de acordo com os dados do Sistema Copernicus/EFFIS (*European Forest Fire Information System*) é igual a **`{r} scales::comma(round(as.numeric(yr_2024_total[1,1]),1))` hectares**. De acordo com esta informação, no mês de setembro arderam **`{r} scales::comma(round(as.numeric(yr_2024_month_totals[9,2]),1))` hectares** dos quais **`{r} scales::comma(round(as.numeric(after_15sept_total[1,1]),1))` hectares** ocorreram após o dia 15 de setembro de 2024 (inclusive; ou seja, correspondente `{r} round(perc_15sept*100,1)`% do total anual).

Segundo os dados do EFFIS, foram contabilizados **`{r} sum(wf_counts$Nr_incendios_2024)`** ocorrências de incêndio das quais **`{r} nrow(Nr_inc_15set)`** ocorreram após o dia *15 de setembro* (inclusive), correspondente a **`{r} round((nrow(Nr_inc_15set) / sum(wf_counts$Nr_incendios_2024)) * 100, 1)`%** do total anual.

Em termos de afetação potencial de áreas com estatuto de conservação/proteção, um total de **`{r} scales::comma(round(sum(ba_rnap$ba_total_ha),0))` hectares** ocorreram em *Rede Nacional de Áreas Protegidas (RNAP)*, **`{r} scales::comma(round(sum(ba_rn2k_sic$ba_total_ha),0))` hectares** em *Sítios de Interesse Comunitário da Rede Natura 2000*, e **`{r} scales::comma(round(sum(ba_rn2k_zpe$ba_total_ha),0))` hectares** em *Zonas de Proteção Especial* também em contexto da *Rede Natura 2000*.

Em termos de afetação potencial dos cursos de água e, considerando uma estratificação pela hierarquia de Strahler [^2], foram quantificados os seguintes impactos em termos de comprimento total por tipo de rio (classes de Strahler de 1 a 6):\
`{r} ba_hydro_summary %>% pull(markdown_entry) %>% paste(collapse = "\n")`.

[^2]: A ordem de Strahler classifica rios com base na hierarquia dos seus afluentes: rios de nível 1 não possuem afluentes, dois rios de nível 1 formam um de nível 2, dois de nível 2 formam um de nível 3, e assim sucessivamente até ao nível 6. Neste sistema os diferentes níveis refletem a complexidade da rede fluvial; rios de nível 1 são pequenos cursos de água sem afluentes, e à medida que os afluentes se unem, formam rios de níveis superiores, com cada nível a representar um aumento na quantidade de água transportada e na área de drenagem.

De acordo com dados do Instituto Nacional de Estatística (INE), e considerando as subsecções estatísticas constantes da *Base Geográfica de Referenciação de Informação* (BGRI) para os Censos de 2021, um total de **`{r} scales::comma(sum(ba_bgri$N_INDIVIDUOS))` habitantes** foram potencialmente afetados pelos incêndios de 2024, como residentes dentro ou nas imediações dos perímetros ardidos, com níveis muito diferenciados de impacto direto ou indireto e que os dados a que tivemos acesso não permitem estimar. Segundo este conjunto de dados também, um total de **`{r} scales::comma(sum(ba_bgri$N_ALOJAMENTOS_TOTAL))` alojamentos** poderão ter sido impactados, com graus de afetação direta ou indireta muito diferenciados e que os dados não permitem caracterizar, estando localizados dentro ou nas imediações dos perímetros ardidos.

De acordo com o conjunto de dados aberto de edíficos *MS Buildings Footprint*, que mistura todas as tipologias de edificado (e.g., habitacional, industrial, serviços), um total de **`{r} scales::comma(nrow(ba_msb_buildings))` edifícios** foram potencialmente afetados pelos incêndios de 2024 com níveis muito diferenciados de impacto (que os dados a que tivemos acesso não permitem estimar), estando incluídos dentro dos perímetros de área ardida mapeados pelo sistema EFFIS.

Segundo o conjunto de dados aberto OSM -- OpenStreetMap -- sobre vias de trânsito/acesso/circulação e, agregando todas as tipologias existentes nesta base de dados (e.g., auto-estradas, estradas nacionais, municipais, caminhos, trilhos), foram potencialmente afetados **`{r} scales::comma(round(sum(ba_osm_roads$road_len_km),2))` Km de vias**.

Um total de **`{r} round(sum(ba_pp$ba_len_km), 1)` Km de percursos pedestres** (incluindo trilhos 
PR e GR homologados pela FCMP - Federação de Campismo e Montanhismo de Portugal, 
Caminhos de Santiago, Fátima entre outras vias) foram impactadas pelos incêndios de 2024 de forma 
direta ou indireta e com graus de impacto muito diferenciados (que os dados a que tivemos acesso 
não permitem estimar), estando incluídos dentro dos perímetros de área ardida mapeados pelo 
sistema EFFIS.

```{r}
#| label:  ba-effis-map-wf-location
#| fig-height: 10
#| fig-width: 8


portugal_mainland <- read_sf("../data/vector/CAOP_Continente_2023/PT_caop2020_bounds_WGS84.shp")

#dem <- rast("../data/raster/DEM_SRTM/DEM_SRTM_WGS84GCS.tif")
dem <- rast("../data/raster/DEM_SRTM/DEM_SRTM_JAG_1sec_WGS84GCS.tif")
names(dem) <- "dem"


breaks <- c(-Inf, 1E-6, 50, 100, 200, 500, 1000, 2000, 5000, 10000, Inf)

reds <- colorRampPalette(c("#FFFFFF", "#A31212"))(length(breaks) - 1)


effis_sp_2024$ba_class <- cut(
  effis_sp_2024$area_ht,
  breaks = breaks,
  include.lowest = TRUE,
  right = TRUE,  # ] means right-closed intervals for most classes
  labels = c("0","]0, 50[", "]50, 100]", "]100, 200]", 
             "]200, 500]", "]500, 1000]",
             "]1000, 2000]", "]2000, 5000]", 
             "]5000, 10000]", ">10000"))


ba_effis_map_pt <- ggplot() +
  geom_spatraster(data = dem, aes(fill=dem), alpha=0.25) + 

scale_fill_gradientn(
    colors = c("darkgreen", "green", "yellow", "orange", "brown", "white"), # Topographic colors
    values = scales::rescale(c(0, 200, 400, 600, 800, 1000, 2000)),  # Adjust values based on elevation ranges
    name = "Altitude (m)",  # Legend name
    na.value = "transparent"  # Handle missing values
  ) +
  
  geom_sf(data = portugal_mainland, color = "darkgrey",
          fill=NA, size = 0.5) +

  geom_sf(data = effis_sp_2024, 
          #mapping = aes(fill = ba_class), 
          color="darkred",
          fill=NA) +
  annotation_scale(
        location = "br",     # Location of the scale bar ("bl" = bottom left)
        width_hint = 0.25,    # Relative width of the scale bar (0.5 = 50% of plot width)
        unit_category = "metric",  # Use metric units (meters)
        height = unit(0.25, "cm"),  # Height of the scale bar
        text_cex = 1) +
  # scale_fill_manual(
  #   values = reds,
  #   name = "Área ardida (ha)") +
  labs(title = "Áreas ardidas em Portugal continental 2024",
       caption = paste0(
         "Dados: Copernicus/EFFIS - European Forest Fire Information System \n(data: ",
       format(Sys.Date(), "%d/%m/%Y"),")\nAutor: J. Gonçalves")) +
  theme_minimal() +
  theme(legend.position = "right", text = element_text(size = 13))

plot(ba_effis_map_pt)

```

A distribuição das ocorrências de incêndio por dimensão da área ardida é mostrada na tabela abaixo. Nesta são apresentadas a frequência absoluta e relativa (%) para o ano de 2024. Para efeito de análise mais detalhada, foram separadas as ocorrências na base de dados do EFFIS a partir de 15 de setembro. Neste caso é mostrada a frequência aboluta e relativa (tendo como denominador as ocorrências em cada categoria de dimensão da área ardida).

```{r}
#| label:  ba-wildfires-size-freq-table


kable(wf_counts,
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Número de incêndios por dimensão da área ardida",
      col.names = c("Classe","Nr. ocorrências", "Percentagem 2024", 
                    "Nr. ocorrências após 15 set", 
                    "Percentagem classe após 15 set")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")


```

```{r}
#| label:  ba-wildfires-size-freq-histogram
#| fig-height: 6
#| fig-width: 8

hist_plot <- ggplot(data.frame(cats=categories), aes(x = cats)) +
  geom_bar(fill = "darkred") +
  labs(title = "Histograma da dimensão das\náreas ardidas (2024)",
       x = "Classe dimensão (hectares)", 
       y = "Frequência / Nr. de incêndios") +
  theme_bw() + 
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

line_plot <- ggplot(wf_area_cats, aes(x = cats, y = cum_area, group = 1)) +
  geom_line(color = "darkred", size = 1) +
  geom_point(size = 2, color="darkred") +  # Optional: add points for emphasis
  labs(title = "Área ardida acumulada",
       x = "Classe dimensão (hectares)", 
       y = "Área acumulada (ha)") +
  scale_y_continuous(breaks = seq(0, 150000, by = 20000), labels = scales::comma) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))


plot(hist_plot + line_plot)

```

```{r}
#| label: ba-annual-plot
#| fig-height: 6
#| fig-width: 8

g_annual_totals <- ggplot(annual_totals, aes(x = year, y = ba_total_yr)) +
  geom_bar(stat = "identity", fill = "dark red") +
  xlab("Ano") +
  ylab("Área ardida (hectares)") +
  scale_y_continuous(labels = scales::comma,
                     breaks = seq(0, 600000, 50000)) +
  theme_bw() +
  theme(text=element_text(size=13),
        axis.text.x = element_text(angle = 90, vjust = 0.5)) +
  labs(title = "Área ardida em Portugal continental 2001 - 2024",
       caption = paste0("Dados: Copernicus/EFFIS - European Forest Fire Information System \n(data: ",format(Sys.Date(), "%d/%m/%Y"),")\nAutor: J. Gonçalves"))


plot(g_annual_totals)

```

```{r}
#| label:  ba-monthly-totals-2024
#| fig-height: 6
#| fig-width: 8

g_2024_monthly_totals <- ggplot(yr_2024_month_totals,aes(x = month_name, y = ba_total_month)) +
  geom_bar(stat = "identity", fill = "dark red") +
  xlab("Ano") +
  ylab("Área ardida (hectares)") +
  scale_y_continuous(labels = scales::comma,
                     breaks = seq(0, 150000, 20000)) +
  theme_bw() +
  theme(text=element_text(size=13),
        axis.text.x = element_text(angle = 90, vjust = 0.5)) +
  labs(title = "Área ardida por mês em Portugal continental \nno ano de 2024",
       caption = paste0("Dados: Copernicus/EFFIS - European Forest Fire Information System \n(data: ",format(Sys.Date(), "%d/%m/%Y"),")\nAutor: J. Gonçalves"))


plot(g_2024_monthly_totals)


```

```{r}
#| label:  ba-elevation-density-plot
#| cache: true


elev_stages_colors <- c("#2962AD", "#51A4E8", "#549E63", "#DBB858", "#853115")

elev_stages_labs <- c("Terras-baixas\n[0,100m[", 
                           "Basal\n[100,400m[", 
                           "Submontano\n[400,700m[", 
                           "Montano\n[700,1000m[", 
                           "Altimontano\n[1000,1300m[", 
                           "Erminiano\n>1300m")

ba_elev_dem <- terra::extract(dem, effis_sp_2024)

colnames(ba_elev_dem) <- c("ID","dem")

# Define elevation categories for ecological stages (example values, adjust as needed)
ba_elev_dem$stage <- cut(ba_elev_dem$dem,
                breaks = c(-Inf, 100, 400, 700, 1000, 1300, Inf),
                labels = elev_stages_labs)

# Create the density plot
ba_elev_dens <- ggplot(ba_elev_dem, aes(x = dem)) +
  geom_density(alpha = 0.6, linewidth=1, color="black") +
    geom_vline(xintercept = c(100, 400, 700, 1000, 1300), linetype = "dashed", 
               color = "grey", size = 1) + # Add vertical lines
  geom_histogram(aes(y = ..density..), binwidth = 20, alpha = 0.3) +
  annotate("text", x = 5, y = 0.0017, label = elev_stages_labs[1], color = elev_stages_colors[1], 
           size = 3) +
  annotate("text", x = 250, y = 0.0017, label = elev_stages_labs[2], color = elev_stages_colors[2], 
           size = 3) +
  annotate("text", x = 550, y = 0.0017, label = elev_stages_labs[3], color = elev_stages_colors[3], 
           size = 3) +
  annotate("text", x = 850, y = 0.0017, label = elev_stages_labs[4], color = elev_stages_colors[4], 
           size =3) +
  annotate("text", x = 1150, y = 0.0017, label = elev_stages_labs[5], color = elev_stages_colors[5], 
           size = 3) +
  annotate("text", x = 1400, y = 0.0017, label = elev_stages_labs[6], color = "black", size = 3) +
  labs(title = "Distribuição da área ardida por altitude", 
       subtitle = "(gráfico de densidade)",
       x = "Altitude (metros)", y = "Densidade") +
  theme_minimal()


```

```{r}
#| label:  ba-elevation-barplot
#| cache: true


# Calculate the percentage for each stage
stage_perc <- as.data.frame(prop.table(table(ba_elev_dem$stage)) * 100)

# Rename the columns for better understanding
colnames(stage_perc) <- c("Piso", "Percentagem")

# Create the bar plot
ba_elev_bar <- ggplot(stage_perc, aes(x = Piso, y = Percentagem, fill = Piso)) +
  geom_bar(stat = "identity", alpha=0.7, show.legend = FALSE) +
  scale_fill_manual(values = c(elev_stages_colors,"black")) +
  labs(title = "Percentagem de área ardida por patamar altitudinal", 
       x = "Patamar altitudinal", 
       y = "Percentagem (%)") +
  theme_minimal()
```

```{r}
#| label:  ba-elevation-do-plots
#| fig-height: 8
#| fig-width: 8

suppressMessages(suppressWarnings(
  plot(ba_elev_dens / ba_elev_bar)
))
```

### 2.1. Área ardida por classe de uso/coberto do solo

Os resultados desta análise são apresentados nas subsecções seguintes tendo por base os dois conjuntos de dados de uso/ocupação do solo:

-   **COS conjuntural 2024 (pré-verão)**, e,
-   **COS 2018**.

```{r}
#| label:  ba-cosc2024-land-use-cover
#| cache: true


labels <- c("Artificializado",
            "Culturas anuais out/inv",
            "Culturas anuais pri/ver",
            "Outras áreas agrícolas",
            "Sobreiro e azinheira",
            "Eucalipto",
            "Outras folhosas",
            "Pinheiro bravo",
            "Pinheiro manso",
            "Outras resinosas",
            "Matos",
            "Veg. herbácea esp.",
            "Sup. s/ vegetação",
            "Zonas húmidas",
            "Água")

values <- c(100, 211, 212, 213, 311,
            312, 313, 321, 322, 323,
            410, 420, 500, 610, 620)

# Create the data frame
lucc_df <- data.frame(
  label = labels,
  value = as.character(values),
  stringsAsFactors = FALSE
)

#write.csv(lucc_df,"../data/cos2024_legenda.csv", row.names = FALSE)


if(DO_FASTERIZE_ON_EFFIS){
  
  effis_rst_2024 <- fasterize(effis_sp_2024_utm,
                            cosc_2024_rst,
                            field = "id")

  raster::writeRaster(effis_rst_2024, 
                    "../data/raster/effis_rst_2024.tif", 
                    overwrite = TRUE)
}


effis_sprst_2024 <- rast("../data/raster/effis_rst_2024.tif")


if(!USE_COSC2024_CACHE){
  
  nrow_vec <- 1:nrow(cosc_2024)
  
  n_chunks <- 30
  
  split_vector <- split(nrow_vec, cut(seq_along(nrow_vec), n_chunks, labels = FALSE))
  
  split_list <- lapply(split_vector, FUN = range)
  
  
  if(VERBOSE_ON_COSC24) pb <- txtProgressBar(1,n_chunks,style=3)
  
  for(i in 1:n_chunks){
    
    sta <- split_list[[i]][1]
    end <- split_list[[i]][2]
    
    effis_vals <- values(c(effis_sprst_2024,cosc_2024),
                         row=sta,
                         nrows=length(sta:end),
                         col=1,
                         ncols=ncol(cosc_2024),
                         dataframe=TRUE)
    
    
    effis_vals <- effis_vals[!(is.na(effis_vals$effis_rst_2024)),]
    
    colnames(effis_vals) <- c("fid","lucc")
    
    tmp <- effis_vals %>%
      group_by(fid,lucc) %>%
      summarise(pix_count = n(),.groups = "drop_last")
    
    if(i==1){
      cosc_2024_freq_by_ba <- tmp
    }else{
      cosc_2024_freq_by_ba <- rbind(cosc_2024_freq_by_ba, tmp)
    }
    
    if(VERBOSE_ON_COSC24) setTxtProgressBar(pb, i)
  }
  
  ## Summarize across all categories but keep each wildfire entry
  
  
  ba_cosc24_freqs <- cosc_2024_freq_by_ba %>%
    group_by(fid,lucc) %>%
    summarise(pixel_count = sum(pix_count),.groups = "drop_last")
  
  
  ba_cosc24_freqs_wide <- pivot_wider(ba_cosc24_freqs,
                                      names_from = lucc,
                                      values_from = pixel_count) %>%
    mutate(across(everything(), ~replace_na(.x, 0))) %>%
    as.data.frame() %>%
    mutate(
      across(-fid, ~(.x * 0.01))
    )
  
  readr::write_rds(ba_cosc24_freqs,"ba_cosc24_freqs.rds")
  readr::write_rds(ba_cosc24_freqs_wide,"ba_cosc24_freqs_wide.rds")
  
}else{
  
  ba_cosc24_freqs <- readr::read_rds("ba_cosc24_freqs.rds")
  ba_cosc24_freqs_wide <- readr::read_rds("ba_cosc24_freqs_wide.rds")
}


ba_cosc_2024_percs <- ba_cosc24_freqs_wide %>%
  mutate(ba_tots_ha = rowSums(across(-fid)),
         across(-fid, ~ (.x / ba_tots_ha) * 100)) %>%
  select(-ba_tots_ha)


## Summarize across all categories for PT mainland totals

ba_cos_2024_sums <-
ba_cosc24_freqs_wide %>%
  select(-fid) %>%
  colSums()

ba_cos24_pt <- data.frame(class = names(ba_cos_2024_sums),
           area_ha = ba_cos_2024_sums) %>%
  mutate(ba_perc = (area_ha / sum(area_ha))*100) %>%
left_join(lucc_df, by=c("class"="value")) %>%
  arrange(desc(ba_perc)) %>%
  select(class, label, area_ha, ba_perc)


ba_cos24_pt$label <- factor(ba_cos24_pt$label, levels = ba_cos24_pt$label)


```

```{r}
#| label:  ba-cos2018-land-use-cover
#| cache: true


ba_summ_cos18 <- ba_effis_cos18 %>%
  group_by(COS18n4_L) %>%
  summarize(ba_total_ha = sum(ba_ha)) %>%
  as.data.frame %>%
  mutate(ba_perc = (ba_total_ha / sum(ba_total_ha))*100) %>%
  arrange(desc(ba_total_ha))

ba_summ_cos18$COS18n4_L <- factor(ba_summ_cos18$COS18n4_L,
                                  levels = ba_summ_cos18$COS18n4_L)


```

#### 2.1.1. Carta de Uso e Ocupação do Solo conjuntural - COSc 2024

```{r}
#| label: ba-cosc24-pt-table


kable(ba_cos24_pt %>% filter(label != "NA"),
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Área ardida em 2024 por classe de uso/coberto do solo (COSc 2024)",
      col.names = c("Código","Classe uso/coberto", "Área ardida (ha)", "% ardida")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

```{r}
#| label:  ba-cosc24-pt-barplot
#| fig-height: 8
#| fig-width: 8

g_annual_totals_cosc24 <- ggplot(ba_cos24_pt %>% filter(label != "NA"),
                                 aes(x = label, y = area_ha)) +
  geom_bar(stat = "identity", fill = "dark red") +
  xlab("Classe de uso/coberto do solo") +
  ylab("Área ardida (hectares)") +
  scale_y_continuous(labels = scales::comma,
                     breaks = seq(0, 60000, 10000)) +
  theme_bw() +
  theme(text=element_text(size=13),
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(title = "Área ardida em 2024 por uso/coberto do solo (COSc 2024)",
       caption = paste0("Dados: Copernicus/EFFIS - European Forest Fire Information System \n(data: ",format(Sys.Date(), "%d/%m/%Y"),")\nAutor: J. Gonçalves"))


plot(g_annual_totals_cosc24)

```

\newpage

#### 2.1.2. Carta de Ocupação do Solo - COS 2018

```{r}
#| label:  ba-cos18-pt-table


kable(ba_summ_cos18 %>% filter(ba_perc >= 1),
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = paste0("Área ardida em 2024 por classe de uso/coberto do solo (COS 2018; para classes de uso/coberto do solo com ",
                       ifelse(OUTPUT_FORMAT=="html","≥1%","$\\geq$1\\%"),
                       " de área ardida)"),
      col.names = c("Classe uso/coberto", "Área ardida (ha)", "% ardida")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

```{r}
#| label: ba-cos18-pt-barplot 
#| fig-height: 9
#| fig-width: 8

g_annual_totals_cos18 <- ggplot(ba_summ_cos18 %>% filter(ba_perc >= 1),
                                 aes(x = COS18n4_L, y = ba_total_ha)) +
  geom_bar(stat = "identity", fill = "dark red") +
  xlab("Classe de uso/coberto do solo") +
  ylab("Área ardida (hectares)") +
  scale_y_continuous(labels = scales::comma,
                     breaks = seq(0, 60000, 10000)) +
  theme_bw() +
  theme(text=element_text(size=13),
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(title = "Área ardida em 2024 por uso/coberto do solo (COS 2018)",
       subtitle = expression("(classes de uso/coberto com" >= 1~"% área ardida)"),
       caption = paste0("Dados: Copernicus/EFFIS - European Forest Fire Information System \n(data: ",format(Sys.Date(), "%d/%m/%Y"),")\nAutor: J. Gonçalves"))


plot(g_annual_totals_cos18)

```

\newpage

## 3. Área ardida por município

Nesta secção do relatório, apresentamos uma análise detalhada das áreas ardidas no ano de 2024, com enfoque nos municípios de Portugal continental. O objetivo desta análise é avaliar a distribuição das áreas afetadas pelos incêndios em cada município.

```{r}
#| label:  ba-2024-municipalities-table

kable(ba_mun_2024 %>% select(-conc_area_ha) %>% filter(ba_total_ha > 50),
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Área ardida por município no ano de 2024 (com áreas ardidas >50 hectares)",
      col.names = c("Município","Área ardida 2024 (hectares)","% área do concelho")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

```{r}
#| label: ba-2024-municipalities-map
#| fig-height: 10
#| fig-width: 8


ba_conc <- conc %>% left_join(ba_mun_2024, by="Municipio")

ba_conc$ba_total_ha[is.na(ba_conc$ba_total_ha)] <- 0

breaks <- c(0, 1E-6, 50, 100, 200, 500, 1000, 2000, 5000, 10000, 20000)

reds <- colorRampPalette(c("#FFFFFF", "#A31212"))(length(breaks) - 1)


ba_conc$ba_class <- cut(
  ba_conc$ba_total_ha,
  breaks = breaks,
  include.lowest = TRUE,
  right = TRUE,  # ] means right-closed intervals for most classes
  labels = c("0","]0, 50[", "]50, 100]", "]100, 200]", 
             "]200, 500]", "]500, 1000]",
             "]1000, 2000]", "]2000, 5000]", 
             "]5000, 10000]", "]10000, 20000]"))

ggplot(data = ba_conc) +
  geom_sf(aes(fill = ba_class)) +
  scale_fill_manual(
    values = reds,
    name = "Área ardida (ha)") +
  labs(title = "Área ardida por município (2024)",
       caption = paste0(
         "Dados: Copernicus/EFFIS - European Forest Fire Information System \n(data: ",
       format(Sys.Date(), "%d/%m/%Y"),")\nAutor: J. Gonçalves")) +
  
  annotation_scale(
        location = "br",     # Location of the scale bar ("bl" = bottom left)
        width_hint = 0.25,    # Relative width of the scale bar (0.5 = 50% of plot width)
        unit_category = "metric",  # Use metric units (meters)
        height = unit(0.25, "cm"),  # Height of the scale bar
        text_cex = 1) +
  theme_minimal() +
  theme(legend.position = "right", text = element_text(size = 13))

```

\newpage

```{r}
#| label: ba-2024-municipalities-map-perc 
#| fig-height: 10
#| fig-width: 8


#ba_conc <- conc %>% left_join(ba_mun_2024, by="Municipio")

ba_conc$ba_perc[is.na(ba_conc$ba_perc)] <- 0

breaks_p <- c(0, 1E-6, 5, 10, 20, 30, 40, 50, 60, 90, 100)

reds_p <- colorRampPalette(c("#FFFFFF", "#7A0D0D"))(length(breaks_p) - 1)


ba_conc$ba_perc_class <- cut(
  ba_conc$ba_perc,
  breaks = breaks_p,
  include.lowest = TRUE,
  right = TRUE,  # ] means right-closed intervals for most classes
  labels = c("0","]0, 5[", "]5, 10]", "]10, 20]", 
             "]20, 30]", "]30, 40]", "]40, 50]",
             "]50, 60]", "]60, 90]", 
             "]90, 100]"))

ggplot(data = ba_conc) +
  geom_sf(aes(fill = ba_perc_class)) +
  scale_fill_manual(
    values = reds_p,
    name = "% área ardida") +
  labs(title = "% Município ardido (2024)",
       caption = paste0(
         "Dados: Copernicus/EFFIS - European Forest Fire Information System \n(data: ",
       format(Sys.Date(), "%d/%m/%Y"),")\nAutor: J. Gonçalves")) +
  annotation_scale(
        location = "br",     # Location of the scale bar ("bl" = bottom left)
        width_hint = 0.25,    # Relative width of the scale bar (0.5 = 50% of plot width)
        unit_category = "metric",  # Use metric units (meters)
        height = unit(0.25, "cm"),  # Height of the scale bar
        text_cex = 1) +
  theme_minimal() +
  theme(legend.position = "right", text = element_text(size = 13))

```

\newpage

## 4. Área ardida em espaços de proteção/conservação

Nesta secção apresenta-se uma análise da área ardida em espaços de proteção e conservação em Portugal continental, abordando as diferentes redes e áreas de interesse. Esta análise está subdividida em três partes principais:

-   A primeira subsecção (4.1) incidirá sobre a *Rede Nacional de Áreas Protegidas* (RNAP), explorando a extensão dos incêndios em territórios que possuem um elevado valor ecológico, património natural e biodiversidade;

-   Na subsecção (4.2), será analisada a área ardida nos *Sítios de Interesse Comunitário* (SIC), integrados na Rede Natura 2000, com especial enfoque nos impactos sobre os habitats naturais protegidos;

-   Por fim, a subsecção (4.3) examinará as *Zonas de Proteção Especial* (ZPE), também parte da Rede Natura 2000, discutindo as áreas afetadas em locais designados para a conservação de aves e outras espécies prioritárias.

Esta análise visa avaliar os impactos dos incêndios nas áreas de maior relevância em termos de património natural com vista a suportar potenciais medidas de recuperação e prevenção nesses espaços.

### 4.1. Rede Nacional de Áreas Protegidas (RNAP)

```{r}
#| label: ba-2024-rnap 
#| cache: true


ba_rnap$nome_ap <- replace_strings(ba_rnap$nome_ap)


kable(ba_rnap %>% select(sigla, nome_ap, ba_total_ha, ba_perc),
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Área ardida na RNAP 2024",
      col.names = c("Sigla","Nome AP", "Área ardida (ha)", "% AP ardida")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

#### 4.1.1. Área ardida na RNAP por classe de uso/ocupação do solo (COSc 2024)

```{r}
#| label: ba-2024-rnap-cosc2024 
#| cache: true

ba_cosc24_rnap_summ <- ba_cosc24_rnap %>% 
  mutate(nome_ap = replace_strings(nome_ap)) %>% 
  group_by(sigla,nome_ap,cosc2024) %>% 
  summarise(ba_ha_tot = sum(ba_ha)) %>% 
  as.data.frame() %>% 
  left_join(lucc_df %>% mutate(cosc2024=as.integer(`value`)), by="cosc2024") %>% 
  select(-cosc2024, -value, sigla, nome_ap, label, ba_ha_tot)


ba_cosc24_rnap_summ_wid <- ba_cosc24_rnap_summ %>%   
  pivot_wider(names_from = `label`,
              values_from = ba_ha_tot, # The values to be placed in the new columns
              values_fill = 0 )  %>% 
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>% 
  ungroup() %>%
  # Arrange in descending order by the total column
  arrange(desc(Total)) %>% 
  as.data.frame() %>% 
  filter(Total>1) %>% 
  select(-Total)

colnames(ba_cosc24_rnap_summ_wid)[1:2] <- c("Cod.","Nome")

kable(ba_cosc24_rnap_summ_wid %>% select(any_of(c("Cod.","Nome",cosc24_sort))),
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Área ardida (em hectares) na RNAP por classe de uso do solo COSc 2024 (para área ardida >1 ha)") %>% 
      #col.names = c("Sigla","Nome AP", "Área ardida (ha)", "% AP ardida")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

#### 4.1.2. Área ardida na RNAP por classe de uso/ocupação do solo (COS 2018)

```{r}
#| label: ba-2024-rnap-cos2018
#| cache: true

ba_cos18_rnap_summ <- ba_cos18_rnap %>% 
  mutate(nome_ap = replace_strings(nome_ap)) %>% 
  group_by(sigla,nome_ap,COS18n4_L) %>% 
  summarise(ba_ha_tot = sum(ba_ha)) %>% 
  as.data.frame() %>% 
  #left_join(lucc_df %>% mutate(cosc2024=as.integer(`value`)), by="cosc2024") %>% 
  select(sigla, nome_ap, COS18n4_L, ba_ha_tot)


ba_cos18_rnap_summ_wid <- ba_cos18_rnap_summ %>%   
  pivot_wider(names_from = `COS18n4_L`,
              values_from = ba_ha_tot, # The values to be placed in the new columns
              values_fill = 0 )  %>% 
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>% 
  ungroup() %>%
  # Arrange in descending order by the total column
  arrange(desc(Total)) %>% 
  as.data.frame() %>% 
  filter(Total > 1) %>% 
  select(-Total)

colnames(ba_cos18_rnap_summ_wid)[1:2] <- c("Cod.","Nome")

kable(ba_cos18_rnap_summ_wid%>% select(any_of(c("Cod.","Nome",cos18_sort))),
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Área ardida (em hectares) na RNAP por classe de uso do solo COS 2018 (para área ardida >1 ha)") %>% 
      #col.names = c("Sigla","Nome AP", "Área ardida (ha)", "% AP ardida")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

#### 4.1.3. Área ardida na RNAP por classe de severidade


```{r}
#| label: ba-2024-rnap-sev-rbr
#| cache: true

#ba_rnap$ba_total_ha

ba_sev_rbr_rnap_summ <- ba_sev_rbr_rnap %>% 
  mutate(nome_ap = replace_strings(nome_ap)) %>% 
  group_by(sigla,nome_ap, rbr_sev_cls) %>% 
  summarise(ba_ha_tot = sum(ba_ha)) %>% 
  as.data.frame() %>% 
  #left_join(lucc_df %>% mutate(cosc2024=as.integer(`value`)), by="cosc2024") %>% 
  select(sigla, nome_ap,rbr_sev_cls, ba_ha_tot)


ba_sev_rbr_rnap_summ_wid <- ba_sev_rbr_rnap_summ %>%   
  pivot_wider(names_from = `rbr_sev_cls`,
              values_from = ba_ha_tot, # The values to be placed in the new columns
              values_fill = 0 )  %>% 
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>% 
  ungroup() %>%
  # Arrange in descending order by the total column
  arrange(desc(Total)) %>% 
  as.data.frame() %>% 
  #left_join(ba_rnap, by="sigla") %>% 
  #mutate(Por_apurar = ba_total_ha - Total)
  filter(Total > 1) %>%
  select(-Total)

colnames(ba_sev_rbr_rnap_summ_wid)[1:2] <- c("Cod.","Nome")

kable(ba_sev_rbr_rnap_summ_wid %>% select(any_of(c("Cod.","Nome",sev_rbr_classes$rbr_sev_cls))),
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Área ardida (em hectares) na RNAP por classe de severidade (para área ardida >1 ha)") %>% 
      #col.names = c("Sigla","Nome AP", "Área ardida (ha)", "% AP ardida")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

\newpage

### 4.2. Rede Natura 2000 - Sítios de Interesse Comunitário (SIC)

```{r}
#| label: ba-2024-rn2k-sic 
#| cache: true


ba_rn2k_sic$site_name <- replace_strings(ba_rn2k_sic$site_name)


kable(ba_rn2k_sic %>% select(site_code, site_name, ba_total_ha, ba_perc),
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Área ardida nos SIC Rede Natura em 2024",
      col.names = c("Código SIC","Nome SIC", "Área ardida (ha)", "% sítio ardido")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

#### 4.2.1. Área ardida nos SICs por classe de uso/ocupação do solo (COSc 2024)

```{r}
#| label: ba-2024-sic-cosc2024 
#| cache: true



ba_cosc24_sic_summ <- ba_cosc24_sic %>% 
  mutate(site_name = iconv(site_name, from = "ISO-8859-1", to="UTF-8")) %>% 
  group_by(site_code, site_name, cosc2024) %>% 
  summarise(ba_ha_tot = sum(ba_ha)) %>% 
  as.data.frame() %>% 
  left_join(lucc_df %>% mutate(cosc2024=as.integer(`value`)), by="cosc2024") %>% 
  select(-cosc2024, -value, site_code, site_name, label, ba_ha_tot)


ba_cosc24_sic_summ_wid <- ba_cosc24_sic_summ %>%   
  pivot_wider(names_from = `label`,
              values_from = ba_ha_tot, # The values to be placed in the new columns
              values_fill = 0 )  %>% 
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>% 
  ungroup() %>%
  # Arrange in descending order by the total column
  arrange(desc(Total)) %>% 
  as.data.frame() %>% 
  filter(Total>1) %>% 
  select(-Total)

colnames(ba_cosc24_sic_summ_wid)[1:2] <- c("Cod.","Nome")

kable(ba_cosc24_sic_summ_wid %>% select(any_of(c("Cod.","Nome",cosc24_sort))),
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Área ardida (em hectares) nas ZPEs por classe de uso do solo COSc 2024  (para área ardida >1 ha)") %>% 
      #col.names = c("Sigla","Nome AP", "Área ardida (ha)", "% AP ardida")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

#### 4.2.2. Área ardida nos SICs por classe de uso/ocupação do solo (COS 2018)

```{r}
#| label: ba-2024-sic-cos2018 
#| cache: true



ba_cos18_sic_summ <- ba_cos18_sic %>% 
  mutate(site_name = iconv(site_name, from = "ISO-8859-1", to="UTF-8")) %>% 
  group_by(site_code, site_name, COS18n4_L) %>% 
  summarise(ba_ha_tot = sum(ba_ha)) %>% 
  as.data.frame() %>% 
  select(site_code, site_name, COS18n4_L, ba_ha_tot)


ba_cos18_sic_summ_wid <- ba_cos18_sic_summ %>%   
  pivot_wider(names_from = `COS18n4_L`,
              values_from = ba_ha_tot, # The values to be placed in the new columns
              values_fill = 0 )  %>% 
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>% 
  ungroup() %>%
  # Arrange in descending order by the total column
  arrange(desc(Total)) %>% 
  as.data.frame() %>% 
  filter(Total>1) %>% 
  select(-Total)

colnames(ba_cos18_sic_summ_wid)[1:2] <- c("Cod.","Nome")

kable(ba_cos18_sic_summ_wid %>% select(any_of(c("Cod.","Nome",cos18_sort))),
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Área ardida (em hectares) nas ZPEs por classe de uso do solo COSc 2024  (para área ardida >1 ha)") %>% 
      #col.names = c("Sigla","Nome AP", "Área ardida (ha)", "% AP ardida")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

#### 4.2.3. Área ardida nos SICs por classe de severidade


```{r}
#| label: ba-2024-sic-sev-rbr
#| cache: true

ba_sev_rbr_sic_summ <- ba_sev_rbr_sic %>% 
  mutate(site_name = replace_strings(site_name)) %>% 
  group_by(site_code,site_name, rbr_sev_cls) %>% 
  summarise(ba_ha_tot = sum(ba_ha)) %>% 
  as.data.frame() %>% 
  #left_join(lucc_df %>% mutate(cosc2024=as.integer(`value`)), by="cosc2024") %>% 
  select(site_code, site_name,rbr_sev_cls, ba_ha_tot)


ba_sev_rbr_sic_summ_wid <- ba_sev_rbr_sic_summ %>%   
  pivot_wider(names_from = `rbr_sev_cls`,
              values_from = ba_ha_tot, # The values to be placed in the new columns
              values_fill = 0 )  %>% 
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>% 
  ungroup() %>%
  # Arrange in descending order by the total column
  arrange(desc(Total)) %>% 
  as.data.frame() %>% 
  #left_join(ba_rnap, by="site_code") %>% 
  #mutate(Por_apurar = ba_total_ha - Total)
  filter(Total > 1) %>%
  select(-Total)

colnames(ba_sev_rbr_sic_summ_wid)[1:2] <- c("Cod.","Nome")

kable(ba_sev_rbr_sic_summ_wid %>% select(any_of(c("Cod.","Nome",sev_rbr_classes$rbr_sev_cls))),
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Área ardida (em hectares) nas SICs por classe de severidade (para área ardida >1 ha)") %>% 
      #col.names = c("site_code","Nome AP", "Área ardida (ha)", "% AP ardida")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

\newpage

### 4.3. Rede Natura 2000 - Zonas de Proteção Especial (ZPE)

```{r}
#| label:  ba-2024-rn2k-zpe
#| cache: true


ba_rn2k_zpe$site_name <- replace_strings(ba_rn2k_zpe$site_name)


kable(ba_rn2k_zpe %>% select(site_code, site_name, ba_total_ha, ba_perc),
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Área ardida nas ZPEs Rede Natura em 2024",
      col.names = c("Código ZPE","Nome ZPE", "Área ardida (ha)", "% sítio ardido")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

#### 4.3.1. Área ardida nas ZPEs por classe de uso/ocupação do solo (COSc 2024)

```{r}
#| label: ba-2024-zpe-cosc2024 
#| cache: true



ba_cosc24_zpe_summ <- ba_cosc24_zpe %>% 
  mutate(site_name = iconv(site_name, from = "ISO-8859-1", to="UTF-8")) %>% 
  group_by(site_code, site_name, cosc2024) %>% 
  summarise(ba_ha_tot = sum(ba_ha)) %>% 
  as.data.frame() %>% 
  left_join(lucc_df %>% mutate(cosc2024=as.integer(`value`)), by="cosc2024") %>% 
  select(-cosc2024, -value, site_code, site_name, label, ba_ha_tot)


ba_cosc24_zpe_summ_wid <- ba_cosc24_zpe_summ %>%   
  pivot_wider(names_from = `label`,
              values_from = ba_ha_tot, # The values to be placed in the new columns
              values_fill = 0 )  %>% 
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>% 
  ungroup() %>%
  # Arrange in descending order by the total column
  arrange(desc(Total)) %>% 
  as.data.frame() %>% 
  filter(Total>1) %>% 
  select(-Total)

colnames(ba_cosc24_zpe_summ_wid)[1:2] <- c("Cod.","Nome")

kable(ba_cosc24_zpe_summ_wid %>% select(any_of(c("Cod.","Nome",cosc24_sort))),
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Área ardida (em hectares) nas SICs por classe de uso do solo COSc 2024  (para área ardida >1 ha)") %>% 
      #col.names = c("Sigla","Nome AP", "Área ardida (ha)", "% AP ardida")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

#### 4.3.2. Área ardida nas ZPEs por classe de uso/ocupação do solo (COS 2018)

```{r}
#| label: ba-2024-zpe-cos2018 
#| cache: true



ba_cos18_zpe_summ <- ba_cos18_zpe %>% 
  mutate(site_name = iconv(site_name, from = "ISO-8859-1", to="UTF-8")) %>% 
  group_by(site_code, site_name, COS18n4_L) %>% 
  summarise(ba_ha_tot = sum(ba_ha)) %>% 
  as.data.frame() %>% 
  select(site_code, site_name, COS18n4_L, ba_ha_tot)


ba_cos18_zpe_summ_wid <- ba_cos18_zpe_summ %>%   
  pivot_wider(names_from = `COS18n4_L`,
              values_from = ba_ha_tot, # The values to be placed in the new columns
              values_fill = 0 )  %>% 
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>% 
  ungroup() %>%
  # Arrange in descending order by the total column
  arrange(desc(Total)) %>% 
  as.data.frame() %>% 
  filter(Total>1) %>% 
  select(-Total)

colnames(ba_cos18_zpe_summ_wid)[1:2] <- c("Cod.","Nome")

kable(ba_cos18_zpe_summ_wid %>% select(any_of(c("Cod.","Nome",cos18_sort))),
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Área ardida (em hectares) nas ZPEs por classe de uso do solo COSc 2024  (para área ardida >1 ha)") %>% 
      #col.names = c("Sigla","Nome AP", "Área ardida (ha)", "% AP ardida")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")


```

#### 4.3.3. Área ardida nas ZPEs por classe de severidade


```{r}
#| label: ba-2024-zpe-sev-rbr
#| cache: true

ba_sev_rbr_zpe_summ <- ba_sev_rbr_zpe %>% 
  mutate(site_name = replace_strings(site_name)) %>% 
  group_by(site_code,site_name, rbr_sev_cls) %>% 
  summarise(ba_ha_tot = sum(ba_ha)) %>% 
  as.data.frame() %>% 
  #left_join(lucc_df %>% mutate(cosc2024=as.integer(`value`)), by="cosc2024") %>% 
  select(site_code, site_name,rbr_sev_cls, ba_ha_tot)


ba_sev_rbr_zpe_summ_wid <- ba_sev_rbr_zpe_summ %>%   
  pivot_wider(names_from = `rbr_sev_cls`,
              values_from = ba_ha_tot, # The values to be placed in the new columns
              values_fill = 0 )  %>% 
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>% 
  ungroup() %>%
  # Arrange in descending order by the total column
  arrange(desc(Total)) %>% 
  as.data.frame() %>% 
  #left_join(ba_rnap, by="site_code") %>% 
  #mutate(Por_apurar = ba_total_ha - Total)
  filter(Total > 1) %>%
  select(-Total)

colnames(ba_sev_rbr_zpe_summ_wid)[1:2] <- c("Cod.","Nome")

kable(ba_sev_rbr_zpe_summ_wid %>% select(any_of(c("Cod.","Nome",sev_rbr_classes$rbr_sev_cls))),
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Área ardida (em hectares) nas ZPEs por classe de severidade (para área ardida >1 ha)") %>% 
      #col.names = c("site_code","Nome AP", "Área ardida (ha)", "% AP ardida")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

\newpage

## 5. Análise de grandes áreas ardidas

```{r}
#| label: ba-cosc24-big-wildfires-analysis
#| cache: true

ba_effis_bigfires <-
  effis_data_2024 %>%
  filter(area_ht >= BIG_FIRE_THRESH)

ba_effis_bigfires_utm <-
  effis_sp_2024_utm %>%
  filter(area_ht >= BIG_FIRE_THRESH)

ba_cosc24_bigfires <-
ba_cosc24_freqs_wide %>%
  mutate(ba_tots_ha = rowSums(across(-fid))) %>%
  mutate(fid = as.character(fid))

colnames_df <- data.frame(
  cn = colnames(ba_cosc24_bigfires)) %>%
  left_join(lucc_df, by=c("cn"="value"))

colnames_df$label[colnames_df$cn=="fid"] <- "fid"
colnames_df$label[colnames_df$cn=="NA"] <- "NA"
colnames_df$label[colnames_df$cn=="ba_tots_ha"] <- "ba_tots_ha"

colnames(ba_cosc24_bigfires) <- colnames_df$label


ba_cosc24_bigfires_percs <- ba_cosc_2024_percs %>%
  mutate(fid = as.character(fid)) %>%
  filter(fid %in% ba_effis_bigfires$id)

colnames_df <- data.frame(
  cn = colnames(ba_cosc24_bigfires_percs)) %>%
  left_join(lucc_df, by=c("cn"="value"))
colnames_df$label[colnames_df$cn=="fid"] <- "fid"
colnames_df$label[colnames_df$cn=="NA"] <- "NA"
colnames(ba_cosc24_bigfires_percs) <- colnames_df$label


# Burned area in big wildfires
ba_cosc24_bigfires <- ba_effis_bigfires %>%
  left_join(ba_cosc24_bigfires, by=c("id"="fid"))

ba_cosc24_bigfires <- ba_cosc24_bigfires %>% 
  arrange(fire_dt, COMMUNE)

# Burned %'s in big wildfires
ba_cosc24_bigfires_percs <- ba_effis_bigfires %>%
  left_join(ba_cosc24_bigfires_percs, by=c("id"="fid"))

ba_cosc24_bigfires_percs <- ba_cosc24_bigfires_percs %>% 
  arrange(fire_dt, COMMUNE)

```

### Síntese geral

Neste secção apresenta-se uma caracterização detalhada das grandes áreas ardidas com **dimensão superior a `{r} scales::comma(BIG_FIRE_THRESH)` hectares**, analisando a distribuição dos usos / coberto do solo em cada uma dessas áreas, a severidade, a afetação de áreas com estatuto de proteção/conservação entre outros aspetos.

No total, à data de `{r} format(Sys.Date(), "%d/%m/%Y")`, foram encontradas **`{r} nrow(ba_effis_bigfires)`** ocorrências com dimensão superior a `{r} scales::comma(BIG_FIRE_THRESH)` hectares, totalizando **`{r} scales::comma(sum(ba_effis_bigfires$area_ht))` hectares** da área ardida em 2024 o que representa **`{r} round((sum(ba_effis_bigfires$area_ht) / sum(effis_data_2024$area_ht))*100,1)`%** do total anual.

A lista de grande incêndios é evidenciada na tabela a seguir por localidade e município(s) envolvido(s):

```{r}
#| label: bigfires-list-municipalities-table
#| cache: true

bf_municips <-
ba_mun_2024_ %>% 
  st_drop_geometry() %>% 
  filter(id %in% ba_effis_bigfires$id) %>% 
  group_by(id,Municipio) %>%
  summarise(ba_municip = sum(ba_ha)) %>% 
  arrange(id, desc(ba_municip)) %>% 
  group_by(id) %>% 
  summarise(bf_municip_in = paste(Municipio, collapse=", "))

bf_list_locs <-
ba_effis_bigfires %>% 
  mutate(perc_bf = (area_ht / as.numeric(yr_2024_total[1,1]))*100) %>% 
  left_join(bf_municips, by="id") %>% 
  arrange(fire_dt, COMMUNE) 
    

kable(bf_list_locs %>% 
  select(fire_dt, week, COMMUNE,bf_municip_in, area_ht, perc_bf),
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Lista de grandes áreas ardidas no ano de 2024",
      col.names = c("Data",
                    "Semana", 
                    "Localidade", 
                    "Municípios",
                    "Área ardida (ha)",
                    "% do total anual")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

A distribuição destes incêndios por classe de uso/ocupação do solo é mostrada nas tabelas seguintes considerando os dois conjuntos de dados de referência:

-   **COS conjuntural 2024**, e a

-   **COS 2018**.

```{r}
#| label: bigfires-cosc2024-table 
#| cache: true

bf_cos24_summ <- 
ba_cosc24_bigfires %>% 
  select(Matos:`Zonas húmidas`) %>% 
  select(-`NA`, -`Água`) %>% 
  summarise(across(everything(),sum)) %>% 
  pivot_longer(Matos:`Zonas húmidas`) %>% 
  `colnames<-`(c("Classe_COSc2024","Area_ha")) %>% 
  arrange(desc(Area_ha)) %>% 
  mutate(Percentagem = (Area_ha/ sum(Area_ha))*100)

bf_cos24_summ$Classe_COSc2024 <- factor(bf_cos24_summ$Classe_COSc2024 ,
                                  levels = bf_cos24_summ$Classe_COSc2024)

kable(bf_cos24_summ,
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Tipos de uso/coberto do solo ardidos nos grandes incêndios de 2024 segundo a COS conjuntural 2024 (pré-verão)",
      col.names = c("Classe de uso/coberto do solo COSc 2024",
                    "Área (hectares)", 
                    "% Área")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")
```

```{r}
#| label: bigfires-cosc24-pt-barplot 
#| fig-height: 8
#| fig-width: 8


bf_cosc24 <- ggplot(bf_cos24_summ,
                    aes(x = Classe_COSc2024, y = Area_ha)) +
  geom_bar(stat = "identity", fill = "dark red") +
  xlab("Classe de uso/coberto do solo") +
  ylab("Área ardida (hectares)") +
  scale_y_continuous(labels = scales::comma,
                     breaks = seq(0, 60000, 10000)) +
  theme_bw() +
  theme(text=element_text(size=13),
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(title = paste("Área ardida nos grandes incêndios de 2024 (>",BIG_FIRE_THRESH,"ha)\npor uso/coberto do solo (COSc 2024)"),
       caption = paste0("Dados: Copernicus/EFFIS - European Forest Fire Information System \ndata: ",format(Sys.Date(), "%d/%m/%Y"),")\nAutor: J. Gonçalves"))


plot(bf_cosc24)

```

```{r}
#| label: bigfires-cosc2018-table
#| cache: true

bf_cos2018_summ <- ba_effis_cos18 %>%
    filter(id %in% ba_effis_bigfires$id) %>% 
    group_by(COS18n4_L) %>%
    summarize(ba_tot = sum(ba_ha)) %>%
    mutate(ba_perc = (ba_tot / sum(ba_tot))*100) %>%
    arrange(desc(ba_tot))

bf_cos2018_summ$COS18n4_L <- factor(bf_cos2018_summ$COS18n4_L ,
                                  levels = bf_cos2018_summ$COS18n4_L)

kable(bf_cos2018_summ,
      digits = 1,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Tipos de uso/coberto do solo ardidos nos grandes incêndios de 2024 segundo a COS 2018",
      col.names = c("Classe de uso/coberto do solo COS 2018",
                    "Área (hectares)", 
                    "% Área")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

```{r}
#| label: bigfires-cos2018-pt-barplot 
#| fig-height: 10
#| fig-width: 8

bf_cos18 <- ggplot(bf_cos2018_summ %>% filter(ba_perc > 0.5),
                    aes(x = COS18n4_L, y = ba_tot)) +
  geom_bar(stat = "identity", fill = "dark red") +
  xlab("Classe de uso/coberto do solo") +
  ylab("Área ardida (hectares)") +
  scale_y_continuous(labels = scales::comma,
                     breaks = seq(0, 60000, 10000)) +
  theme_bw() +
  theme(text=element_text(size=13),
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(title = paste("Área ardida nos grandes incêndios de 2024 (>",BIG_FIRE_THRESH,"ha)\npor uso/coberto do solo (COS 2018)"),
       caption = paste0("Nota: apenas as classes cuja percentagem é superior 0.5% são mostradas no gráfico \nDados: Copernicus/EFFIS - European Forest Fire Information System \n(data: ",
                        format(Sys.Date(), "%d/%m/%Y"),")\nAutor: J. Gonçalves"))


plot(bf_cos18)

```

### Severidade dos grandes incêndios de 2024

Apresentam-se abaixo os resultados da distribuição da área ardida (em hectares) pelas classes de severidade para o indicador *NBR / RBR*:

```{r}
#| label: calc-severity-table-areas-per-sev-class
#| cache: true


sev_vals <- terra::extract(sev_s2_rbr, ba_effis_bigfires_utm) #%>% 
  #filter(RBR > 0)


# Define breaks and labels for the RBR classes
breaks <- c(-Inf, 0, 1455, 2750, 3801, 4900, Inf)
labels <- c("Não ardido", "Muito baixa", "Baixa", 
            "Média", "Elevada", "Muito elevada")

# Categorize RBR into the classes using cut()
sev_vals$RBR_class <- cut(sev_vals$RBR, 
                          breaks = breaks, 
                          labels = labels, 
                          right = FALSE)

sev_abs_freq_ <- table(sev_vals$ID, sev_vals$RBR_class)*0.04

sev_areas_estim <- sev_abs_freq_ %>% apply(1, sum)
sev_areas_init <- ba_effis_bigfires_utm$area_ht

area_to_estim <- sev_areas_estim - sev_areas_init
area_to_estim[area_to_estim >= 0] <- 0
area_to_estim[area_to_estim < 0 & area_to_estim >= -10] <- 0
area_to_estim <- area_to_estim*-1


sev_abs_freq <- as.data.frame.matrix(sev_abs_freq_[,-1]) %>% 
  mutate(fid = as.character(ba_effis_bigfires_utm$id)) %>% 
  mutate(area_to_estim = area_to_estim)

sev_abs_freq <- sev_abs_freq %>% arrange(desc(`Elevada`+`Muito elevada`))

sev_abs_freq <- sev_abs_freq %>% 
  left_join(bf_list_locs, by=c("fid"="id"))



```

```{r}
#| label: severity-table-area

kable(sev_abs_freq %>% 
  select(fid, COMMUNE,bf_municip_in, `Muito baixa`:`Muito elevada`,area_to_estim),
      digits = 0,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Severidade da área ardida nos grandes incêndios de 2024 (em hectares por classe de severidade usando o indicador NBR/RBR). A tabela foi ordenada de forma descendente com base na soma das classes de elevada e muito elevada severidade. A área por estimar deve-se à ausência de imagens de satélite, ou à presença de nuvens nas mesmas, à data desta análise.",
      col.names = c("ID_EFFIS",
                    "Localidade",
                    "Municípios", 
                    "Muito baixa (ha)", 
                    "Baixa (ha)",
                    "Média (ha)",
                    "Elevada (ha)",
                    "Muito elevada (ha)",
                    "Área por estimar (ha)")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")
```

Apresentam-se abaixo os resultados da distribuição da área ardida (em %) pelas classes de severidade para o indicador *NBR / RBR*:

```{r}
#| label: severity-table-percs-per-sev-class 
#| cache: true

sev_rel_freq <- prop.table(sev_abs_freq %>%
                             select(`Muito baixa`:`Muito elevada`,area_to_estim)  %>% 
                             as.matrix, margin = 1)*100
sev_rel_freq <- as.data.frame.matrix(sev_rel_freq)
sev_rel_freq <- sev_rel_freq %>% 
  mutate(fid = as.character(sev_abs_freq$fid)) %>% 
  left_join(bf_list_locs, by=c("fid"="id"))


sev_rel_freq <- sev_rel_freq %>% arrange(desc(`Elevada`+`Muito elevada`))



```

```{r}
#| label: severity-table-percs


kable(sev_rel_freq %>% 
  select(fid, COMMUNE,bf_municip_in, `Muito baixa`:`Muito elevada`,area_to_estim),
      digits = 2,
      format = ifelse(OUTPUT_FORMAT=="html","html","latex"),
      longtable = TRUE,
      caption = "Severidade da área ardida nos grandes incêndios de 2024 (em % por classe de severidade usando o indicador NBR/RBR). A tabela foi ordenada de forma descendente com base na soma das classes de elevada e muito elevada severidade. A área por estimar deve-se a ausência de imagens de satélite, ou à presença de nuvens nas mesmas, à data desta análise.",
      col.names = c("ID_EFFIS",
                    "Localidade",
                    "Municípios", 
                    "% Muito baixa", 
                    "% Baixa",
                    "% Média",
                    "% Elevada",
                    "% Muito elevada",
                    "% Área por estimar")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                latex_options = "repeat_header")

```

```{r}
#| label: big-fire-analysis-by-occurrence
#| results: asis
#| output: asis
#| fig-height: 8
#| fig-width: 9




for(i in 1:(ifelse(USE_TEST_DATA,1,
                   nrow(ba_cosc24_bigfires)))
    ){

  sink(tempfile())

  # Active/target big fire ID used for analysis
  bf_id <- ba_cosc24_bigfires$id[i]
  
  # ------------------------------------------------------------ #
  # Compose stats for COSc 2024 ----
  # ------------------------------------------------------------ #


  bf_cos24 <- ba_cosc24_bigfires[i,] %>%
    select(`Matos`:`Pinheiro manso`) %>%
    select(-`NA`)

  bf_cos24_perc <- ba_cosc24_bigfires_percs[i,] %>%
    select(`Matos`:`Pinheiro manso`) %>%
    select(-`NA`)

  bf_cos24_stats <- data.frame(
    `Classe_COSc_2024` = colnames(bf_cos24),
    `Area_ha` = as.numeric(bf_cos24[1,]),
    `Perc_area` = as.numeric(bf_cos24_perc[1,])) %>%
    filter(Area_ha > 0) %>%
    arrange(desc(Area_ha))


  # ------------------------------------------------------------ #
  # Compose stats for COS 2018 ----
  # ------------------------------------------------------------ #

  bf_cos18 <- ba_effis_cos18 %>%
    filter(id == bf_id) %>%
    group_by(COS18n4_L) %>%
    summarize(ba_tot = sum(ba_ha)) %>%
    mutate(ba_perc = (ba_tot / sum(ba_tot))*100) %>%
    arrange(desc(ba_tot))


  # Big Fire spatial data
  big_fire_sp_wgs <- effis_sp_2024 %>%
    filter(id == bf_id)
  
  big_fire_sp <- effis_sp_2024_utm %>%
    filter(id == bf_id)

  big_fire_spatvec <- as(big_fire_sp, "SpatVector")


  ## Crop COSc 2024 ----
  
  bf_cosc24_crop <- terra::mask(
                      terra::crop(cosc_2024, big_fire_spatvec),
                         big_fire_spatvec) %>%
    terra::project("EPSG:4326", method = "near") %>%
    as.factor

  levels(bf_cosc24_crop) <- data.frame(ID = as.integer(lucc_df$value),
                                       category = lucc_df$label)

  ## Crop severity raster and classify it ----
  
  rbr_classified_crop <- terra::mask(
                          terra::crop(sev_s2_rbr, big_fire_spatvec),
                         big_fire_spatvec) %>%
    terra::project("EPSG:4326", method = "near")
  
  
  rbr_classified_crop <- classify(rbr_classified_crop, 
                           rcl = from_to_recl)

  # Convert the reclassified raster to a factor (to represent categorical data)
  suppressMessages(suppressWarnings(
  levels(rbr_classified_crop) <- data.frame(ID = 0:5,
                                            RBR = sev_labels)
  ))

  
  # ------------------------------------------------------------ #
  # Analysis for roads ----
  # ------------------------------------------------------------ #

  bf_roads_int <- ba_osm_roads %>% filter(id == bf_id)
  
  bf_roads_summ <- bf_roads_int %>%
    group_by(fclass) %>%
    summarise(Comprimento_Km = sum(road_len_km)) %>%
    mutate(Percentagem = (Comprimento_Km / sum(Comprimento_Km)) *100) %>%
    arrange(desc(Percentagem))

  
    
  # ------------------------------------------------------------ #
  # Analysis for tracks and trails ----
  # ------------------------------------------------------------ #

  bf_pp_int <- ba_pp %>% filter(id == bf_id)
  
  bf_pp_summ <- bf_pp_int %>%
    group_by(trck_nm ) %>%
    summarise(Comprimento_Km = sum(ba_len_km)) %>%
    mutate(Percentagem = (Comprimento_Km / sum(Comprimento_Km)) *100) %>%
    arrange(desc(Percentagem))

  

  # ------------------------------------------------------------ #
  # Analysis by municipality ----
  # ------------------------------------------------------------ #
  
  big_fire_conc <- ba_mun_2024_ %>% filter(id == bf_id)

  big_fire_conc_sum <- big_fire_conc %>%
    st_drop_geometry() %>%
    group_by(Municipio) %>%
    summarise(ba_ha_tot     = sum(ba_ha)) %>%
    mutate(perc_ba = (ba_ha_tot / sum(ba_ha_tot))*100) %>% 
    #select(1,3,2) %>%
    arrange(desc(ba_ha_tot))

  municp_str <- paste(
    big_fire_sp$COMMUNE,"\n(",
    paste(na.omit(big_fire_conc_sum$Municipio[1:2]),
          collapse = " / "), ")", sep=""
  )
  municp_str_ <- paste(
    big_fire_sp$COMMUNE," (",
    paste(na.omit(big_fire_conc_sum$Municipio[1:2]),
          collapse = " / "), ")", sep=""
  )

  # ------------------------------------------------------------ #
  # Analysis for buildings ----
  # ------------------------------------------------------------ #
  

  bf_nr_buildings <- nrow(ba_msb_buildings %>% filter(id == bf_id))
  
  
  # ------------------------------------------------------------ #
  # Analysis for rivers ----
  # ------------------------------------------------------------ #
  
  bf_rivers <- 
  ba_hydro_net %>% 
    filter(id == bf_id) %>% 
    distinct(OBJECT_ID, .keep_all = TRUE) %>% 
    group_by(STRAHLER) %>% 
    summarise(Comprimento_Km = sum(river_len_m)/1000) %>% 
  mutate(
    total_len = round(Comprimento_Km, 1), # Convert to kilometers and round to 1 decimal place
    markdown_entry = paste0("- Classe ", STRAHLER, ": ", total_len, " km\n")) %>% 
    rename( "Ordem_Strahler" = "STRAHLER")

  
  # ------------------------------------------------------------ #
  # Analysis for population census ----
  # ------------------------------------------------------------ #
  
  bf_bgri <- ba_bgri %>% 
    filter(id == bf_id)
  
  bf_pop <- sum(bf_bgri$N_INDIVIDUOS)
  bf_alojamentos <- sum(bf_bgri$N_ALOJAMENTOS_TOTAL)

  # ------------------------------------------------------------ #
  # Analysis for protected areas ----
  # ------------------------------------------------------------ #

  # RNAP  
  bf_rnap <- ba_rnap_ %>% filter(id == bf_id)
  if(nrow(bf_rnap) == 0){
    bf_rnap_area <- 0
  }else{
    bf_rnap_area <- sum(bf_rnap$ba_ha)
  }
  
  # SIC
  bf_sic <- ba_rn2k_sic_ %>% filter(id == bf_id)
  if(nrow(bf_sic) == 0){
    bf_sic_area <- 0
  }else{
    bf_sic_area <- sum(bf_sic$ba_ha)
  }
    
  # ZPE
  bf_zpe <- ba_rn2k_zpe_ %>% filter(id == bf_id)
  if(nrow(bf_zpe) == 0){
    bf_zpe_area <- 0
  }else{
    bf_zpe_area <- sum(bf_zpe$ba_ha)
  }
      
  
  # ------------------------------------------------------------ #
  
  # Make buffer and ancillary stuff to map the
  # burned area properly
  big_fire_buff <- suppressMessages(suppressWarnings(
    big_fire_sp %>%
    st_buffer(dist = BIGFIRE_BUFFER_DISTANCE) %>%
    st_transform(crs="EPSG:4326")
  ))

  big_fire_sp <- suppressMessages(suppressWarnings(
    big_fire_sp %>%
    st_transform(crs="EPSG:4326")
  ))
  # Crop the municipalities map to the
  # bouding box of the area
  conc_crop <- suppressMessages(suppressWarnings(
    st_crop(conc_wgs, st_bbox(big_fire_buff))
  ))

  # Get the basemap for Alidade Smooth
  basemap <- suppressMessages(suppressWarnings(
    get_stadiamap(bbox = as.numeric(st_bbox(big_fire_buff)),
                           zoom = 13,
                           maptype = "alidade_smooth")
  ))

  
  # ------------------------------------------------------------------- ##
  # Make the COSc 2024 map ----
  # ------------------------------------------------------------------- ##

  gg_big_fire_map <- suppressMessages(
    suppressWarnings(

      ggmap(basemap) +

        geom_spatraster(data = bf_cosc24_crop,
                        mapping = aes(fill=category)) +
        scale_fill_manual(values = land_cover_colors,
                          name="Classe COSc2024",
                          na.value = "transparent") +
        geom_sf(data = big_fire_sp,
                fill = "orange",
                alpha = 0.3,
                color = "#9E1414",
                size = 1,
                inherit.aes = FALSE) +

        geom_sf(data = conc_wgs,
                fill = NA,
                alpha = 0.3,
                color = "black",
                size = 0.5,
                inherit.aes = FALSE) +

        geom_sf_label(data = conc_crop,
                      mapping = aes(label = Municipio),
                      size = 3,
                      alpha = 0.6,
                      color = "black",
                      inherit.aes = FALSE) +

        coord_sf(crs = st_crs(4326)) +

        labs(title = municp_str) +
        xlab(NA) +
        ylab(NA) +

      annotation_scale(
        location = "br",     # Location of the scale bar ("bl" = bottom left)
        width_hint = 0.25,    # Relative width of the scale bar (0.5 = 50% of plot width)
        unit_category = "metric",  # Use metric units (meters)
        height = unit(0.25, "cm"),  # Height of the scale bar
        text_cex = 1) +

        theme_minimal() +
        theme(text = element_text(size=11),
              axis.title.x = element_blank(),    # Remove x-axis title
              axis.title.y = element_blank()    # Remove y-axis title
              )

    ))

    bf_cosc24_crop <- mask(crop(cosc_2024, big_fire_spatvec),
                         big_fire_spatvec) %>%
    project("EPSG:4326", method = "near") %>%
    as.factor
  #names(bf_cosc24_crop) <- "cosc24"
  levels(bf_cosc24_crop) <- data.frame(ID = as.integer(lucc_df$value),
                                       category = lucc_df$label)

  # ------------------------------------------------------------------- ##
  # Make the severity map ----
  # ------------------------------------------------------------------- ##

  gg_big_fire_map_sev <- suppressMessages(
    suppressWarnings(

      ggmap(basemap) +
        
      geom_spatraster(data = rbr_classified_crop, 
                        mapping = aes(fill = RBR)) +
        
    scale_fill_manual(values = sev_cols, name = "Severidade",
                          na.value = "transparent") + 
        
  geom_sf(data = big_fire_sp,
                fill = NA,
                alpha = 0.3,
                color = "#9E1414",
                size = 1,
                inherit.aes = FALSE) +

        geom_sf(data = conc_wgs,
                fill = NA,
                alpha = 0.3,
                color = "black",
                size = 0.5,
                inherit.aes = FALSE) +

        geom_sf_label(data = conc_crop,
                      mapping = aes(label = Municipio),
                      size = 3,
                      alpha = 0.6,
                      color = "black",
                      inherit.aes = FALSE) +

        coord_sf(crs = st_crs(4326)) +

        labs(title = "Severidade da área ardida (NBR/RBR)",
             subtitle = municp_str) +
        xlab(NA) +
        ylab(NA) +

      annotation_scale(
        location = "br",     # Location of the scale bar ("bl" = bottom left)
        width_hint = 0.25,    # Relative width of the scale bar (0.5 = 50% of plot width)
        unit_category = "metric",  # Use metric units (meters)
        height = unit(0.25, "cm"),  # Height of the scale bar
        text_cex = 1) +

        theme_minimal() +
        theme(text = element_text(size=11),
              axis.title.x = element_blank(),    # Remove x-axis title
              axis.title.y = element_blank()    # Remove y-axis title
              )

    ))
  
  sink()

  # ------------------------------------------------------------ #
  # Output contents for each big fire ----
  # ------------------------------------------------------------ #

  if(OUTPUT_FORMAT=="pdf") cat("\\newpage")

  if(OUTPUT_FORMAT=="pdf")
    cat(paste0("\\subsection{5.",i,". ",municp_str_, "}\n\n"),sep="")
  if(OUTPUT_FORMAT=="html")
    cat(paste0("\n\n### 5.",i,". ",municp_str_, "      \n\n<br>"),sep="")

  
  suppressMessages(suppressWarnings(
    plot(gg_big_fire_map)
  ))
  
  
  cat("\n\n")
  cat("\n\n")
  
  suppressMessages(suppressWarnings(
    plot(gg_big_fire_map_sev)
  ))
  
  
  cat("\n\n")
  cat("\n\n")
  
  
  cat("- **Total área ardida** (Fonte: EFFIS):",
      scales::comma(round(big_fire_sp$area_ht[1],1))," hectares\n\n")
  
  cat("- Data/hora do fogo: ",
      big_fire_sp$fire_date[1],"\n\n")
  
  cat("- Área ardida em RNAP (Fonte: ICNF):",
      scales::comma(round(bf_rnap_area,1)),"hectares\n\n")
  cat("- Área ardida em SICs/ Rede Natura 2000:",
      scales::comma(round(bf_sic_area,1)),"hectares\n\n")
  cat("- Área ardida em ZPEs/ Rede Natura 2000:",
      scales::comma(round(bf_zpe_area,1)),"hectares\n\n")
  
  cat("- Número de residentes/indivíduos potencialmente afetados (Fonte: INE):",
      scales::comma(round(bf_pop,1)),"\n\n")
  cat("- Número de alojamentos potencialmente afetados:",
      scales::comma(round(bf_alojamentos,1)),"\n\n")
  
  cat("- Número de edifícios potencialmente afetados (Fonte: MS Buildings Footprint):",
      scales::comma(round(bf_nr_buildings,1)),"\n\n")
  
  
  cat("\n\n")
  cat("<hr>")
  cat("\n\n")

    
  cat("\n\n**Área ardida por município**\n\n")

  suppressMessages(suppressWarnings(
    big_fire_conc_sum %>%
      mutate(across(2:3, round, digits = 1)) %>%
      `colnames<-`(c("Municipio","Area_ha","Percentagem")) %>%
  # bind_rows(
  #   summarize(., Municipio = "TOTAL",
  #             Area_ha = sum(Area_ha),
  #             Percentagem = sum(Percentagem))) %>%
    flextable() %>%
    set_table_properties(width = 0.9, layout = "autofit") %>%
    flextable_to_rmd()
  ))
  cat("\n\n")

  cat("\n\n**Área ardida por classe de uso/coberto do solo (COSc 2024, DGT)**\n\n")


  suppressMessages(suppressWarnings(
    bf_cos24_stats %>%
    mutate(across(2:3, round, digits = 1)) %>%
    `colnames<-`(c("Classe COSc2024","Area_ha","Percentagem")) %>%
    flextable() %>%
    set_table_properties(width = 0.9, layout = "autofit") %>%
    flextable_to_rmd()
  ))
  cat("\n\n")

  cat("\n\n**Área ardida por classe de uso/coberto do solo (COS 2018, DGT)**\n\n")

  suppressMessages(suppressWarnings(
    bf_cos18 %>%
      mutate(across(2:3, round, digits = 1)) %>%
    `colnames<-`(c("Classe_COS2018","Area_ha","Percentagem")) %>%
      mutate(Classe_COS2018 = insert_line_break(Classe_COS2018, 35)) %>%
    flextable() %>%
    set_table_properties(width = 0.9, layout = "autofit") %>%
    flextable_to_rmd()
  ))


  cat("\n\n")

  
  cat("\n\n**Área (hectares) e % ardida por classe de severidade (NBR/RBR, Sentinel-2)**\n\n")

  suppressMessages(suppressWarnings(
      sev_abs_freq %>% 
      filter(fid == bf_id) %>% 
      select(`Muito baixa`:`Muito elevada`,area_to_estim) %>%
        mutate(across(1:6, round, digits = 1)) %>%
    `colnames<-`(c("Muito baixa (ha)","Baixa (ha)","Média (ha)",
                   "Elevada (ha)","Muito elevada (ha)","Por apurar (ha)")) %>%
      #mutate(Classe_COS2018 = insert_line_break(Classe_COS2018, 35)) %>%
    flextable() %>%
    set_table_properties(width = 0.9, layout = "autofit") %>%
    flextable_to_rmd()
  ))

    suppressMessages(suppressWarnings(
      sev_rel_freq %>% 
      filter(fid == bf_id) %>% 
      select(`Muito baixa`:`Muito elevada`,area_to_estim) %>%
        mutate(across(1:6, round, digits = 1)) %>%
    `colnames<-`(c("% Muito baixa","% Baixa","% Média",
                   "% Elevada","% Muito elevada", "% Por apurar")) %>%
      #mutate(Classe_COS2018 = insert_line_break(Classe_COS2018, 35)) %>%
    flextable() %>%
    set_table_properties(width = 0.9, layout = "autofit") %>%
    flextable_to_rmd()
  ))

  cat("\n\n")
  

  
  cat("\n\n**Afetação potencial de rios e ribeiros (fonte: EU-Hydro River Network Database)**\n\n")

  suppressMessages(suppressWarnings(
    bf_rivers %>% select(1,2) %>%
      mutate(across(2, round, digits = 1)) %>%
    flextable() %>%
    set_table_properties(width = 0.9, layout = "autofit") %>%
    flextable_to_rmd()
  ))
  
  cat("\n\n")

  cat("\n\n**Afetação potencial de estradas e caminhos (fonte: OpenStreetMap)**\n\n")

  suppressMessages(suppressWarnings(
    bf_roads_summ %>%
      mutate(across(2:3, round, digits = 1)) %>%
    `colnames<-`(c("TipoOSM","Comprimento_Km", "Percentagem")) %>%
      left_join(osm_types %>% select(-3), by=c("TipoOSM" = "Type")) %>%
      select(1,4,2,3) %>%
    flextable() %>%
    set_table_properties(width = 0.9, layout = "autofit") %>%
    flextable_to_rmd()
  ))
  
    cat("\n\n")

  cat("\n\n**Afetação potencial de percursos pedestres\n(fonte: percursospedestresportugal.com)**\n\n")

  suppressMessages(suppressWarnings(
    bf_pp_summ %>%
      mutate(across(2:3, round, digits = 1)) %>%
    `colnames<-`(c("Nome PP","Comprimento_Km", "Percentagem")) %>%
    flextable() %>%
    set_table_properties(width = 0.9, layout = "autofit") %>%
    flextable_to_rmd()
  ))

  cat("\n\n")
}


```
